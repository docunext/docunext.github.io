{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2007/09/apache-mod-cache-and-mod-rewrite/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I'm having a tough time working with mod_rewrite and mod_cache, I think because my wordpress setup is messing it up.</p>\n<p>First off, in my experience today:</p>\n<ul>\n<li>mod_cache looks at the final rewritten url, not the requested url, even PT didn't work for me.</li>\n<li>revalidate requires a last-modified date, which must be sent via php (AFAIK about PHP having to send it)</li>\n<li>I needed to setup the htaccess file for wordpress to include the qeury string in the rewritten url (not with QSA though, I have to use (.asterisk) to add it onto the end)</li>\n</ul>\n<p>From my experience today, I can see that mod_proxy and mod_cache can work together to form a really powerful combination for scaling out web services!</p>\n<p>My initial thoughts:</p>\n<ul>\n<li>Use the memory cache for often changing information - like that from a database to store small objects like html documents</li>\n<li>Use the disk cache to store larger remote objects that don't change as often, that are retrieved via a proxy</li>\n</ul>\n<p>Good news - it works with Internet Explorer too, amazing!</p>","fields":{"slug":"/2007/09/apache-mod-cache-and-mod-rewrite/"},"frontmatter":{"title":"Apache mod cache and mod rewrite","date":"September 13th, 2007","tags":"apache,mod_rewrite"}}},"pageContext":{"slug":"/2007/09/apache-mod-cache-and-mod-rewrite/"}},
    "staticQueryHashes": ["3159585216","758480095"]}