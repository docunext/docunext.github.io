{"componentChunkName":"component---src-templates-blog-post-js","path":"/2007/08/sqlite-php/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>With the help of <a href=\"http://devzone.zend.com/node/view/id/760\">Zend's developer zone</a>, I made my first SQLite script:</p>\n<pre>#!/usr/local/bin/php<?php\n\nif(!is_file(\"db.sqlite\")) {     $db = new SQLiteDatabase(\"db.sqlite\");    $db = sqlite_open(\"db.sqlite\");\n\nsqlite_query($db , \"CREATE TABLE foo (id INTEGER PRIMARY KEY, name CHAR(255))\");\n\nsqlite_query($db, \"INSERT INTO foo (name) VALUES ('Ilia')\");\n\nsqlite_query($db, \"INSERT INTO foo (name) VALUES ('Ilia2')\");\n\nsqlite_query($db, \"INSERT INTO foo (name) VALUES ('Ilia3')\");\n\nexit;}$db = sqlite_open(\"db.sqlite\");$result = sqlite_query($db, \"SELECT * FROM foo\");// iterate through the retrieved rows\n\nwhile ($row = sqlite_fetch_array($result)) {    echo \"<pre>\";    print_r($row);    /* each result looks something like this    Array    (        [0] => 1        [id] => 1        [1] => Ilia        [name] => Ilia    )*/}?></pre>\n<p>So far, I'm pretty excited about using sqlite. I was concerned about the foreign keys, but I just found <a href=\"http://www.sqlite.org/cvstrac/wiki?p=ForeignKeyTriggers\">this</a>. You can create the equivalent of foreign key constraints with triggers, and triggers are supported by SQLite, Postgres, and MySQL!</p>\n<p>Following on that minor progress, I added basic <a href=\"http://www.nexista.org/blog/2007/08/22/sqlite-support/\">SQLite support to the pdo datasource in nexista</a>.</p>","fields":{"slug":"/2007/08/sqlite-php/"},"frontmatter":{"title":"SQLite PHP","date":"August 21st, 2007","tags":null}}},"pageContext":{"slug":"/2007/08/sqlite-php/"}},"staticQueryHashes":["3159585216","758480095"]}