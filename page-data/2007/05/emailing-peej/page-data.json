{"componentChunkName":"component---src-templates-blog-post-js","path":"/2007/05/emailing-peej/","result":{"data":{"markdownRemark":{"html":"<p>I just emailed Paul James about REST:</p>\n<blockquote>Hi Paul,\n<p>I've been reading your stuff since you first started foowd, can you believe it? :-)</p>\n<p>Anyway, I am emailing because I recently came across your site again while doing some \"REST\" searching. I am interested in REST because I've taken over maintenance of nexista after the original author, Joshua Savage, switched to using symfony. Nexista is basically a webapp framework written in PHP, based upon concepts from chrysalis and cocoon among others, though I'm working to make nx more \"REST-supportive\" by documenting some app API philosophies on the nexista code wiki as well as my docunext blog. I'd be interested in hearing your thoughts about nexista, as well as what you are using for an application framework these days.</p>\n<p>I'm also emailing you to ask if you wouldn't mind taking a look at the wikipedia page on rest and trying to contribute to it if possible. The page is in rough shape and could use some help. I just added a link to your article, and have made several suggestions on the discussion page. I'll also mention one section in the discussion page worth reading, it contains a link to a major overhaul of the entire page, which I think would be a necessary step in improving the quality of the article. If you agree, please make a note in support of the change.</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Talk:Representational_State_Transfer#Major_revision_of_article.2C_wanting_expansion \">http://en.wikipedia.org/wiki/Talk:Representational<em>State</em>Transfer#Major<em>revision</em>of<em>article.2C</em>wanting_expansion </a></blockquote></p>\n<p>Paul has been publishing quality contributions to the web development community for quite some time now and I hope he is agreeable to my requests. You can read more about his contributions at the <a href=\"http://www.peej.co.uk/\">Paul James Personal Website</a>.</p>\n<p>Duh! I just realized I snarfed the \"less is more\" description of REST from him subconsciously! In my mega-blog entry on Fielding's dissertation, I quoted him:</p>\n<blockquote>\n<p>As Fielding puts it:</p>\n<blockquote>    A network-based API is an on-the-wire syntax, with defined semantics, for application interactions. A network-based API does not place any restrictions on the application code aside from the need to read/write to the network, but does place restrictions on the set of semantics that can be effectively communicated across the interface. On the plus side, performance is only bounded by the protocol design and not by any particular implementation of that design.    A library-based API does a lot more for the programmer, but in doing so creates a great deal more complexity and baggage than is needed by any one system, is less portable in a heterogeneous network, and always results in genericity being preferred over performance. As a side-effect, it also leads to lazy development (blaming the API code for everything) and failure to account for non-cooperative behavior by other parties in the communication.</blockquote>\n<p>which I take to mean: “less is more”.</blockquote></p>\n<p>Got to give credit where credit is due:</p>\n<blockquote>I believe heavily in developing Web applications using the KISS principles of \"less is more\" and am a proponent of the REST architectural style.</blockquote>- Paul James\n<p>¥</p>","frontmatter":{"title":"Emailing PEEJ","date":"May 6th, 2007"}}},"pageContext":{"slug":"/2007/05/emailing-peej/"}}}