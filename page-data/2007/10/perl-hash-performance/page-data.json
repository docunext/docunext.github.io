{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2007/10/perl-hash-performance/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<a href=\"http://www.docunext.com/2007/10/perl-hash-performance/\">\n<p>I'm always curious about computer performance. Can't help it, must be in my blood. So when I heard that perl hashes were fast, I had to do some research.</p>\n<p>From what I've gleaned so far, hashes are best when used for random access, as opposed to sequential access.  For example, if at any given time, any member of a hash might be searched for, it will perform well. On the other hand, if you are going to lookup values in an array one at a time, on after the other, an array will perform well.</p>\n<p>I've been thinking about this because unfortunately, mod_dbd combined with mod_rewrite is still a ways away, and I'd like to keep an active database of all my url schemes. Maybe hashes are the way to go?</p>\n<p>I'm wondering how this would compare to a database for random access. I bet a hash would be faster, but I really don't know. I do know that in my experience, because of the way I prefer to manage data, its actually easier for me to manage a database than it is to manage several hash files. Just my opinion though, I'm sure others prefer hash files.</p>\n<p>I've been thinking about this because unfortunately, mod_dbd combined with mod_rewrite is still a ways away, and I'd like to keep an active database of all my url schemes. Maybe hashes are the way to go?</p>\n<p>UPDATE October 26, 2007: Is there any similarity between one way encryption hashes and has files used as databases?<b>Related</b>:</p>\n<p><a href=\"http://www.dfan.org/real/tpj_hash.html\">Building a Better Hash</a> by Dan Schmidt</p>\n<p><a href=\"http://www.perlmonks.org/?node_id=18684\">Re: Why are hashes so much faster?</a> - perlmonks.org</p>\n<p>Even better:</p>\n<p><a href=\"http://perlmonks.org/index.pl?node_id=17890\">Shift, Pop, Unshift and Push with Impunity!</a> - also at perlmoks.org</p>\n<p>Â¥</p>","fields":{"slug":"/2007/10/perl-hash-performance/"},"frontmatter":{"title":"Perl Hash Performance","date":"October 23rd, 2007","tags":null}}},"pageContext":{"slug":"/2007/10/perl-hash-performance/"}},
    "staticQueryHashes": ["3159585216","758480095"]}