{"componentChunkName":"component---src-templates-blog-post-js","path":"/2009/01/hostnames-versus-dns/","result":{"data":{"markdownRemark":{"html":"<p>I think I've finally figured it out! These notes may not make sense to others, but I'm just jotting them down anyway. It always confused me that there was only one hostname for a machine, but it could have many names pointing towards it. How could you ever match the public hostname to the private / internal hostname?</p>\n<p>While this is natural for public machines (especially if you want to send email to other people on the internet) using PTR records, aka reverse lookups, its not so obvious for local area networks which may rely on hosts files, ldap, or more simple means of storing basic host records.</p>\n<p>Thanks to unbound, a dns resolver with a lot to offer, and dnsmasq, a simple and lightweight dns cache, I think I figured it out. DNSMasq can use a local hosts file to override other network accessible dns information, which seemed to randomly create a ptr record from one of the host lines for an ip. Actually its not random I don't think - I think it uses the first entry on the line. For example:/etc/hosts</p>\n<pre class=\"sh_sh\">\n127.0.0.1    blah.example.com    blah\n</pre>\n<p>\"host 127.0.0.1\" will return blah.example.com, not blah.</p>\n<p>Unbound on the other hand, even if you give it a bunch of local-data A records, its not going to provide you with an automatic reverse lookup, it really needs a PTR record.</p>\n<p>Hopefully my understanding at this point is correct - I'm figuring all this out as I work on <a href=\"http://www.yodnsconf.com/web/\">YoDNSConf - an open source DNS and network management system</a>, as well as <a href=\"http://www.docunext.com/\">starting to experiment with Puppet</a>.</p>","frontmatter":{"title":"Hostnames versus DNS","date":"January 15th, 2009"}}},"pageContext":{"slug":"/2009/01/hostnames-versus-dns/"}}}