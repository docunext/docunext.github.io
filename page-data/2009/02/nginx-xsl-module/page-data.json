{"componentChunkName":"component---src-templates-blog-post-js","path":"/2009/02/nginx-xsl-module/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>NGINX recently added support for XSL transformations, and it is AWESOME! In fact, its one of the coolest pieces of software I've used in a long time.</p>\n<p>Its very simple. The extra cool part of the module is how the templates can be chained together, and it almost seems like a stream editor in a way. Its also very fast!</p>\n<p>The example from the NGINX modules website:</p>\n<pre>\n location / {\n     xml_entities       /site/dtd/entities.dtd;\n     xslt_stylesheet    /site/xslt/one.xslt   param=value;\n     xslt_stylesheet    /site/xslt/two.xslt;\n }\n</pre>\n<p>This is so cool because you can dynamically combine and mesh all sorts of xml documents together. The xml documents can come from a variety of sources - local static XML files or remote dynamic files generated from a database.</p>\n<p>This is really, really great!</p>\n<p>UPDATE: What's even more amazing about this module is that it works with FastCGI output, like this:</p>\n<pre>        location = /cgi-bin/barf.cgi {\n            xslt_types text/html;\n            add_header     Cache-Control:  no-store;\n            fastcgi_pass   unix:/tmp/fcgi.sock;\n            fastcgi_param  DOCUMENT_ROOT     $document_root;\n            fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;\n            fastcgi_param  SCRIPT_NAME       $fastcgi_script_name;\n            fastcgi_param  QUERY_STRING      $query_string;\n            fastcgi_param  REQUEST_METHOD    $request_method;\n            fastcgi_param  CONTENT_TYPE      $content_type;\n            fastcgi_param  CONTENT_LENGTH    $content_length;\n            fastcgi_param  TARGET_FILENAME   $arg_TARGET_FILENAME;\n            xslt_stylesheet /var/www/public/a/webop/templates/xsl/status_services.xsl mynid=\"$arg_nid\";\n        }\n</pre>\n<p>This means I can use a scripting language like PHP, Perl, Python, Ruby, Tcl, Lua or really anything to generate XML, and then it will be transformed via the NGINX xslt module. Sooooo cooool!!!</p>\n<p>Whoa! It also works with proxy_pass!!!!!</p>\n<p>Â¥</p>","fields":{"slug":"/2009/02/nginx-xsl-module/"},"frontmatter":{"title":"The NGINX Web Server XSL Module Works Wonders","date":"February 11th, 2009","tags":"nginx,xsl"}}},"pageContext":{"slug":"/2009/02/nginx-xsl-module/"}},"staticQueryHashes":["3159585216","3388129809"]}