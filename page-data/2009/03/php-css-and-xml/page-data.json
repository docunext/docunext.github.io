{"componentChunkName":"component---src-templates-blog-post-js","path":"/2009/03/php-css-and-xml/","result":{"data":{"markdownRemark":{"html":"<p>I'm experimenting with PHP, CSS, and XML, trying to come up with some sort of css2xml script, while considering the idea of mangling classes and identifiers to prevent collisions when creating mashups.</p>\n<pre class=\"php\"><?php\n\nrequire_once 'HTML/CSS.php';\n\nrequire_once 'XML/Serializer.php';$mycss = file_get_contents('test.css');//$mycss = preg_replace('/#/','id___',$mycss);//$mycss = preg_replace('/\\n\\./','class___',$mycss);$css = new HTML_CSS();$css->parseString($mycss);//$arr = $css->toArray();//var_export($arr);\n\nob_start();$css->display();$converted = ob_get_contents();\n\nob_end_clean();//echo $converted;//exit;$mycss = preg_replace('/\\n#/','id___',$converted);$mycss = preg_replace('/\\n\\./','class___',$mycss);$css->parseString($mycss);$arr = $css->toArray();//echo $converted;//echo $mycss;//exit;$options = array(  XML_SERIALIZER_OPTION_INDENT        => '    ',  XML_SERIALIZER_OPTION_RETURN_RESULT => true);$serializer = &new XML_Serializer($options);$result = $serializer->serialize($arr);\n\necho $result;?></pre>\n<p>Note, this code is just a sketch, and I don't expect it to function well.</p>\n<p>Also, of the post I made recently about <a href=\"http://www.docunext.com/2009/03/css-parsers/\">css parsers</a>, <a href=\"http://rubyforge.org/projects/cssparser/\">this one in ruby</a> again caught my attention.</p>\n<p>Lastly, I found <a href=\"http://appro.mit.jyu.fi/tools/csstoxml/\">csstoxml</a>. Its written in java, so I'm a little hesitant to try it out due to my lack of experience with java.</p>","frontmatter":{"title":"PHP CSS and XML","date":"March 29th, 2009"}}},"pageContext":{"slug":"/2009/03/php-css-and-xml/"}}}