{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2009/12/webrat-rspec-racktest-oddness/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I'm having some trouble testing a Rack application I have setup with Rack::Rewrite.</p>\n<p>Even though by tweaking the Rack::Rewrite code a tiny bit, I can get the tests to run properly, I don't think that Rack::Rewrite is the problem.</p>\n<p>Here are the details:</p>\n<ul>\n<li>I'm using Rack::Rewrite to change a URL</li>\n<li>It works flawlessly when accessed via the browser</li>\n<li>The other Rack middleware I have setup is operating correctly</li>\n<li>If I modify rack-rewrite/rule.rb changing the environment variable it uses on line 79, it runs as expected</li>\n</ul>\n<p>The change in rack-rewrite/rule.rb:</p>\n<pre class=\"sh_ruby\">\npath = rack_env['REQUEST_URI']\n</pre>\n<pre class=\"sh_ruby\">\npath = rack_env['PATH_INFO']\n</pre>\n<p>The change to rule.rb does not affect the application's behavior when accessed from the browser. I should also note that <em>some</em>, but not all, of the rules I set for Rack::Rewrite are indeed processed.</p>\n<p>More details:</p>\n<ul>\n<li>The application is <a href=\"http://www.regdel.com/\">regdel</a></li>\n</ul>\n<p>Guesses as to what's up:</p>\n<ul>\n<li>Rack::Test isn't setting the REQUEST URI env variable for some reason?</li>\n</ul>","fields":{"slug":"/2009/12/webrat-rspec-racktest-oddness/"},"frontmatter":{"title":"Webrat RSpec Rack Test Oddness","date":"December 25th, 2009","tags":"rack,testing"}}},"pageContext":{"slug":"/2009/12/webrat-rspec-racktest-oddness/"}},
    "staticQueryHashes": ["2191495970","4224293195"]}