{"componentChunkName":"component---src-templates-blog-post-js","path":"/2008/03/digest-versus-proxy/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>Just some notes... I'm really tired and I worked on this for several hours today. While I think it might be possible to use digest auth on a back end server <em>and</em> use a different host-path (the request path in the address bar in the browser) and the final path on the server, I couldn't figure it out - esp. with trac.</p>\n<p>This directive on the proxy server:</p>\n<pre>RequestHeader edit Authorization uri=\"/dev([a-z\\/]+)\" uri=\"$1\"</pre>\n<p>fixes this error on the authentication server:</p>\n<pre>Digest: uri mismatch -  does not match request-uri </pre>\n<p>The error is caused by the fact that the browser uri is /dev/trac/login, whereas the server request-uri is /trac/login. The only thing that would fix this particular situation correctly is to rewrite the backend server-side request-uri during the digest processing stage. I have no idea how to do that.</p>\n<p>In the end, I had to carry the /dev/ through to the authenticating back-end server like this:</p>\n<pre class=\"sh_sh\">\nRewriteCond %{REQUEST_URI} ^/dev/\nRewriteCond %{REQUEST_URI} !^/dev/trac/login\nRewriteRule ^/dev/(.*) http://dev-50/$1 [P]\nRewriteCond %{REQUEST_URI} ^/dev/trac/login\nRewriteRule ^/dev/trac/login(.*) http://dev-50/dev/trac/login$1 [P]</pre>\n<p>I feel like it should cause an infinite loop, but its not at the moment. Maybe if I do a hard restart of the back-end server. Update: it does cause an infinite loop:</p>\n<pre>Proxy Error\nThe proxy server received an invalid response from an upstream server.\nThe proxy server could not handle the request GET /dev/trac/login.\nReason: Max-Forwards has reached zero - proxy loop?</pre>\n<p>Luckily there is a way out:</p>\n<pre>RewriteCond %{HTTP:X-Forwarded-Host} !.+\nRewriteCond %{REQUEST_URI} ^/dev/trac/login\nRewriteRule ^/dev/trac/login(.*) http://dev-50/dev/trac/login$1 [L,P]</pre>\n<p>This says something like \"if there is an X-Forwarded-Host, then don't proxy again\". I think that could be problematic if requests from the public ip space contain this header. Therefore I'll evaluate some other headers, like X-Forwarded-For and check a list of designated addresses and hostnames.</p>","fields":{"slug":"/2008/03/digest-versus-proxy/"},"frontmatter":{"title":"Battle Auth Digest versus Reverse Proxy","date":"March 16th, 2008","tags":"apache,authentication,proxies,trac"}}},"pageContext":{"slug":"/2008/03/digest-versus-proxy/"}},"staticQueryHashes":["3159585216","758480095"]}