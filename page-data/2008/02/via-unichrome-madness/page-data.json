{"componentChunkName":"component---src-templates-blog-post-js","path":"/2008/02/via-unichrome-madness/","result":{"data":{"markdownRemark":{"html":"<p>Via makes some cool products, but their management of these products seems totally erratic to me. For example, their driver downloads - some are archived using rar, some with tar and gzip. That's just the tip of the iceberg!</p>\n<p>I finally got AGP enabled on my Everex NC1503 laptop thanks to a hint I found only in the redhat driver instructions, to patch the kernel in a few spots. Now I'm again trying to enable MPEG acceleration and AGPDRM support, which I had when I didn't have AGP support. Ugh!</p>\n<p>Hopefully the success that Everex is finding with gOS will encourage VIA to be cooler with the open source community.</p>\n<p>WOW! This is such a mess. I've been banging my head against the wall trying to get video to work better on the Everex NC1503, to no avail. I feel like I'm really close, but not there yet.</p>\n<p>This is what I was referring to for AGP:</p>\n<p><a href=\"http://wiki.openchrome.org/tikiwiki/tiki-index.php?page=P4M900\">http://wiki.openchrome.org/tikiwiki/tiki-index.php?page=P4M900</a></p>\n<p>But when I had tried it in the past, it didn't produce the same results as this:</p>\n<blockquote>If users want to enable AGP feature (higher performance) for CN896, K8M890,    P4M900 and VN896 IGPs, users need to rebuild kernel source with following steps   manually due to the AGP driver has been built in the default kernel of Fedora    Core Linux 5/6/7.   First, users need to define the AGP device ID in pci_ids.h file which is located   at &lt;kernel source>/include/linux/\n<h1>define PCI<em>DEVICE</em>ID<em>VIA</em>VT3364        0x0364</h1>\n<p>Next, find the structure \"agp<em>device</em>ids via<em>agp</em>device_ids[]\" in via-agp.c    under <kernel source>/drivers/char/agp folder and add following lines.</p>\n<pre>\n/* VT3364*/\n        {\n                .device_id  = PCI_DEVICE_ID_VIA_VT3364,                .chipset_name   = \"VT3364\",\n        },\n</pre>\n<p>Then, find the structure \"pci<em>device</em>id agp<em>via</em>pci_table[]\" and add following   line.</p>\n<p>ID(PCI<em>DEVICE</em>ID<em>VIA</em>VT3364),</p>\n<p>At last, users can start to rebuild the kernel.</blockquote></p>\n<p>The goal being:</p>\n<pre>[   21.953000] Linux agpgart interface v0.102 (c) Dave Jones\n[   21.990000] agpgart: Detected VIA VT3364 chipset\n[   22.044000] agpgart: AGP aperture is 128M @ 0xc0000000</pre>\n<p><a href=\"http://http://bugzilla.kernel.org/attachment.cgi?id=12515\">The patch which was applied to 2.6.23</a>.</p>\n<p>Unfortunately, I'm still getting an error message along the lines that AGP DMA is not enabled for this chipset. I thought I could outsmart the driver by commenting out this:</p>\n<pre>/*  if (dev_priv->chipset == VIA_DX9_0) {\n    DRM_ERROR(\"AGP DMA is not supported on this chip\\n\");\n    return -EINVAL;\n    }*/</pre>\n<p>In that case, with the other pieces correctly in place (via.ko and drm.ko), the DRM ring would initialize, but then it would crash. :-(</p>\n<p>So close... but I could be farther than I think. In addition to the AGP DMA problem, the X driver also reports that panel mode is not available on this chipset, and that its using VBEmodes as a work around - what does that mean?</p>\n<p>It really boggles my mind that Via and Everex would market such a cool, low-cost laptop with Windows Vista. Its much more appropriate to put linux on a machine like this, but they are hindering that effort with their lack of support for the Unichrome drivers. Grrrr.</p>\n<p>Now I'm following <a href=\"http://www.hombrepac.com.ar/software-libre/linux/how-to-via-k8m890-chrome-9-igp-and-linuxs-xorg-ubuntu-edgy-610/\">these slightly outdated</a> instructions... here's the rough set of steps I'm taking:</p>\n<ol>\n<li>cd src</li>\n<li>vim makedriver - find debian, match kernel version</li>\n<li>./makedriver</li>\n<li>its complaining about no via_drv.so</li>\n<li>cd via/X11R7</li>\n<li>./config_x11r7\n7 ./configure</li>\n<li>make - fails with error about overlay.c</li>\n</ol>\n<p>Now I'm using the \"via\" driver, but I still can't use DRM:</p>\n<pre>[drm] failed to load kernel module \"uma\"</pre>\n<p>Nevertheless, the interface is much more responsive. I rebuilt the via and drm modules, then added \"alias uma via\" in the modules alias file, but I still get this:</p>\n<pre>(II) VIA(0): [drm] Detect H5 chipset: 000a  chipid: 3371\ndrmOpenDevice: node name is /dev/dri/card0\ndrmOpenDevice: open result is 7, (OK)\ndrmOpenDevice: node name is /dev/dri/card0\ndrmOpenDevice: open result is 7, (OK)\ndrmOpenByBusid: Searching for BusID PCI:1:0:0\ndrmOpenDevice: node name is /dev/dri/card0\ndrmOpenDevice: open result is 7, (OK)\ndrmOpenByBusid: drmOpenMinor returns 7\ndrmOpenByBusid: drmGetBusid reports pci:0000:01:00.0(II)\n[drm] DRM interface version 1.3(II)\n[drm] DRM open master succeeded.(II) VIA(0):\n[drm] Using the DRM lock SAREA also for drawables.(II) VIA(0):\n[drm] framebuffer handle = 0xa0000000(II) VIA(0):\n[drm] added 1 reserved context for kernel(II) VIA(0):\n[drm] installed DRM signal handler(II) VIA(0):\n[drm] drmAgpEnabled succeeded(II) VIA(0):\n[drm] agpAddr = 0xc0000000(II) VIA(0):\n[drm] agpBase = 0x00000000(II) VIA(0):\n[drm] agpAddr = 0xc0000000(II) VIA(0):\n[drm] agpSize = 0x01000000(II) VIA(0):\n[drm] agp physical addr = 0x00000000(II) VIA(0):\n[drm] register handle = 0xc8000000(II) VIA(0):\n[drm] mmio Registers = 0xc8000000(EE) VIA(0):\n[drm] ERROR! S3GDRIKernelInit:failed to initialize kernel module! (-22)(II) VIA(0):\n[drm] removed 1 reserved context for kernel(II) VIA(0):\n[drm] unmapping 8192 bytes of SAREA 0xf8b3e000 at 0xaf9ce000(II) VIA(0):\n[drm] Closed DRM master.(II) VIA(0):\n[drm] Freeing agp memory(II) VIA(0):\n[drm] Releasing agp module</pre>\n<p>This is the driver source I used from VIA:</p>\n<p><a href=\"http://www.viaarena.com/Driver/VT3324-3364XORG40079a-kernel-src_200.tgz\">http://www.viaarena.com/Driver/VT3324-3364XORG40079a-kernel-src_200.tgz</a></p>\n<p>And I have to say even though a lot of the possibilities aren't functioning, it makes a huge difference in the performance of this computer. :-)</p>\n<p>I notice in the XServer/X11R7/README file, this copyright notice and liberal license is included:</p>\n<pre>\n#\n# Copyright 1998-2006 VIA Technologies, Inc. All Rights Reserved.\n# Copyright 2001-2006 S3 Graphics, Inc. All Rights Reserved.\n#\n# Permission is hereby granted, free of charge, to any person obtaining a\n# copy of this software and associated documentation files (the \"Software\"),\n# to deal in the Software without restriction, including without limitation\n# the rights to use, copy, modify, merge, publish, distribute, sub license,\n# and/or sell copies of the Software, and to permit persons to whom the\n# Software is furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice (including the\n# next paragraph) shall be included in all copies or substantial portions\n# of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL\n# THE AUTHOR(S) OR COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n# DEALINGS IN THE SOFTWARE.</pre>\n<p>That's nice!</p>\n<p>Â¥</p>","frontmatter":{"title":"VIA Unichrome Madness","date":"February 17th, 2008"}}},"pageContext":{"slug":"/2008/02/via-unichrome-madness/"}}}