{"componentChunkName":"component---src-templates-blog-post-js","path":"/2008/06/even-more-perl-notes/","result":{"data":{"markdownRemark":{"html":"<p>Yes I've got more:</p>\n<p>Does mod_deflate cause problems with memory expansion? I <em>think</em> its due to Apache claiming small bits of memory, which would eventually level off. Using GTop, I see the Apache process add about 20kb of memory usage every request. If I turn off compression, it goes away. Yeh - I guess it has to do with how the output streams out of Apache. If the deflate output filter doesn't know how much data is coming, its going to add a little more, just in case its needed. By turning off (aka disable) output buffering in the perl output handler, the deflate filter knows ahead of time how much memory it will need, and if it needs to allocate some more. I am doing this using the following method:</p>\n<pre lang=\"perl\">\nsub handler {    $| = 0;    my $r = shift;    my $output;...} </pre>\n<p>Hmmm, tested that again, the memory still bumps up a little each request. Meh, so I turned off compression, and am now using nginx as a reverse proxy to compress the content:</p>\n<pre lang=\"bash\">\n25013 www-data  15   0  4968 1420  700 S  0.0  0.1   0:00.17 nginx\n25544 www-data  15   0 42384  25m  532 S  0.0  2.6   0:00.00 apache2\n25545 www-data  18   0 68024  30m 5592 S  0.0  3.2   0:01.88 apache2\n25587 www-data  15   0 68480  31m 5592 S  0.0  3.2   0:01.03 apache2        </pre>\n<p>Oh yes, and of course I have varnish setup in front of nginx to cache content too. :-)</p>\n<p>Good stuff:* use strict;* use warnings;* Running apache as a single process is helpful for identifying memory leaks with gtop.</p>\n<p>Surprise:</p>\n<p>Nginx is very efficient. Good.</p>","frontmatter":{"title":"Even more perl notes","date":"June 24th, 2008"}}},"pageContext":{"slug":"/2008/06/even-more-perl-notes/"}}}