{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2008/05/starting-to-test-gnash-slowly/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>One of my projects, <a href=\"http://www.internetfloorplans.com/blog/\">Internet Floor Plans</a>, uses ming to generate swf-powered interactive floor plans. I recently decided to open source the project, and it only made sense to get it working with gnash.</p>\n<p>I sent a note to the gnash mailing list that I'd been involved with ming, and would like to help out gnash. Strk suggest I work on testing, and it made perfect sense.</p>\n<p>I just wrote a small test using some old code I wrote as a ming example, and the cpu pegged. Doh! This was the problem:</p>\n<pre lang=\"php\">$m->setRate(0);</pre>\n<p>I guess it makes the movie play as fast as possible. I removed that line and the cpu in not 100% for the gtk-gnash process. Good!</p>\n<p>After a quick irc conversation with strk on #gnash, I'm going to test the same movie on Windows using a debugging flash player, hopefully available from Adobe, and an actionscript to monitor fps.</p>\n<p>Also want to test the rate of 100 down to 80.</p>\n<p>I'm also going to test building gnash against a few different versions of ming, 0.3 - 0.6, as well as reviewing actionscript.all, Rectangle.as and Point.as.</p>\n<p>Wow, its been years since I've used irc, but its pretty amazing! Strk just helped me figure out the gnash tests really well. I'm going to try wrapping asm {} blocks with #ifdef MING_SUPPORTS_ASM.</p>\n<p>Â¥</p>","fields":{"slug":"/2008/05/starting-to-test-gnash-slowly/"},"frontmatter":{"title":"Starting to test gnash slowly","date":"May 14th, 2008","tags":null}}},"pageContext":{"slug":"/2008/05/starting-to-test-gnash-slowly/"}},
    "staticQueryHashes": ["2191495970","4224293195"]}