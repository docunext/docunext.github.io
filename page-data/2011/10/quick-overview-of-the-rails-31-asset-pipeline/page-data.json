{"componentChunkName":"component---src-templates-blog-post-js","path":"/2011/10/quick-overview-of-the-rails-31-asset-pipeline/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>The Rails 3.1 asset pipeline has had some twists and turns lately. The community seems to me to be a little overdramatic about the state of affairs, but that's not what this post is about.</p>\n<p>I'm writing this post to check in on the last post I wrote about the pipeline: <a href=\"http://www.docunext.com/2011/09/a-problem-with-the-rails-31-asset-pipeline/\">A Problem with the Rails 3.1 Asset Pipeline</a>. In that post, I examined the issue when trying to change the prefix for asset paths with this:</p>\n<pre class=\"sh_sh\">\nconfig.assets.prefix = \"/s\"\n</pre>\n<p>It worked for me, but the asset helpers were still using the default path of \"/assets\". Why was I trying to change the path? Because if I didn't, there would be a controller name clash because I also had a controller named assets_controller.</p>\n<p>It was a cool bug to find as I also found a useful patch for it that was never applied to the master branch and I was able to help get it committed. Since then, I haven't actually tried out a fresh version of Rails to see if it works - until today!</p>\n<p>I just installed Rails 3.1.1 and created a test application with model named Asset and a controller named AssetsController. After some preliminary testing in both development and production modes, <strong>I have come to the conclusion that the asset pipeline in Rails 3.1.1 is working as desired</strong>.</p>\n<p>More specifically, I'm not experiencing any name collisions - even when I leave config.assets.prefix as the default. Check out these screenshots:</p>\n<p>Note that the paths to these assets are as you might expect:</p>\n<pre class=\"sh_html\">\n  &lt;link href=\"/assets/application.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\n  &lt;script src=\"/assets/application.js\" type=\"text/javascript\">&lt;/script>\n</pre>\n<p>Additionally, the config.assets.prefix now works with the asset helpers. If I set:</p>\n<pre class=\"sh_sh\">\nconfig.assets.prefix = \"/s\"\n</pre>\n<p>then these helpers:</p>\n<pre class=\"sh_html\">\n  5   <%= stylesheet_link_tag    \"application\" %>\n  6   <%= javascript_include_tag \"application\" %>\n</pre>\n<p>produce:</p>\n<p>FWIW, here's a snibbet of my production.rb config:</p>\n<pre class=\"sh_ruby\">\n  1 Assetstest::Application.configure do\n  2   # Settings specified here will take precedence over those in config/application.rb\n  3\n  4   # Code is not reloaded between requests\n  5   config.cache_classes = true\n  6\n  7   # Full error reports are disabled and caching is turned on\n  8   config.consider_all_requests_local       = false\n  9   config.action_controller.perform_caching = true\n 10\n 11   # Disable Rails's static asset server (Apache or nginx will already do this)\n 12   config.serve_static_assets = true\n 13\n 14   # Compress JavaScripts and CSS\n 15   config.assets.compress = true\n 16\n 17   # Don't fallback to assets pipeline if a precompiled asset is missed\n 18   config.assets.compile = true\n 19\n 20   # Generate digests for assets URLs\n 21   config.assets.digest = false\n 22   config.assets.prefix = '/s'\n</pre>\n<p>Â¥</p>","fields":{"slug":"/2011/10/quick-overview-of-the-rails-31-asset-pipeline/"},"frontmatter":{"title":"Quick Overview of the Rails 3.1 Asset Pipeline","date":"October 14th, 2011","tags":"asset pipeline"}}},"pageContext":{"slug":"/2011/10/quick-overview-of-the-rails-31-asset-pipeline/"}},"staticQueryHashes":["3159585216","3388129809"]}