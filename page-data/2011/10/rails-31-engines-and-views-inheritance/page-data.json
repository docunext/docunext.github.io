{"componentChunkName":"component---src-templates-blog-post-js","path":"/2011/10/rails-31-engines-and-views-inheritance/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I'm using Engines with Rails 3.1 extensively.</p>\n<p>Ran into an interesting factor: when isolating the engine namespace, if the engine's application controller is namespaced in a module without inheriting from ApplicationController (i.e. it inherits from ActionController::Base instead), the main app application layout will not be used.</p>\n<p>A little background - with engines, most developers will want to either use the main app layout, or a layout included with the engine. For example, Rails Admin uses its own layout, where something like Forem will probably want to use the main app layout.</p>\n<p>When merging the engine and the main app view layouts, there are a couple of pitfalls to be way of:</p>\n<ul>\n<li>Inherited views causes colliding partial names - best to use specific partial paths like application/head instead of just head</li>\n<li>View and path helpers - get used to using main_app.new_something_path</li>\n</ul>\n<p>Want more specifics? I am trying to integrate the rails_blog_engine into <a href=\"http://www.neocarz.com/\">NeoCarz v2</a> but it kept trying to use its own layouts - even after I removed them. To figure out what was going on, I compared and contrasted with Forem, which I am also using in NeoCarz v2 and which I know to use the main app layouts.</p>\n<p>Â¥</p>","fields":{"slug":"/2011/10/rails-31-engines-and-views-inheritance/"},"frontmatter":{"title":"Rails 3.1 Engines and Views Inheritance","date":"October 26th, 2011","tags":"rails3"}}},"pageContext":{"slug":"/2011/10/rails-31-engines-and-views-inheritance/"}},"staticQueryHashes":["3159585216","758480095"]}