{"componentChunkName":"component---src-templates-blog-post-js","path":"/2011/01/test-helper-for-rails-and-authlogic/","result":{"data":{"markdownRemark":{"html":"<p>I'm working on an application that requires a user to be matched with objects, and therefore, to test them, I need to create user fixtures, create sessions, and obtain the user's id from the session.</p>\n<p>It was a little tricky to figure out how to get AuthLogic and Test::Unit to play nicely together, but thanks to some quality docs by the AuthLogic folks, as well as some helpful hints from the StackOverflow community, its no longer a total mystery. Here's what I've got in my test/test_helper.rb:</p>\n<pre class=\"sh_ruby\">\nENV[\"RAILS_ENV\"] = \"test\"\nrequire File.expand_path('../../config/environment', __FILE__)\nrequire 'rails/test_help'\nrequire \"authlogic/test_case\"\nclass ActiveSupport::TestCase\n  # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.\n  #\n  # Note: You'll currently still have to declare fixtures explicitly in integration tests\n  # -- they do not yet inherit this setting\n  def self.inherited(subclass)\n    subclass.instance_eval do\n      setup :activate_authlogic\n    end\n  end\n  fixtures :all\n  # Add more helper methods to be used by all tests here...\n  def setup\n    @current_user = UserSession.create(users(:one))\n  end\nend\n</pre>\n<p>Note: I am using Rails 3.</p>","frontmatter":{"title":"Test Helper for Rails and AuthLogic","date":"January 16th, 2011"}}},"pageContext":{"slug":"/2011/01/test-helper-for-rails-and-authlogic/"}}}