{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2011/09/a-problem-with-the-rails-31-asset-pipeline/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I've run into an error with the Rails 3.1 asset pipeline where one of my controllers happens to be named AssetsController:</p>\n<div class=\"rails-trace\">\n<h1>Routing Error</h1>\n<p><pre>No route matches {:action=&gt;&quot;show&quot;, :controller=&gt;&quot;assets&quot;, :id=&gt;&quot;web-app-theme/base&quot;, :format=&gt;&quot;css&quot;, nil=&gt;:request}</pre></p>\n</div>\n<p>Hmmm. What to do? First, an explanation.</p>\n<h4>The Rails 3.1 Assets \"Controller\"</h4>\n<p>Here's what's happening:</p>\n<ul>\n<li>I have an assets controller, so I also have the following in my config/routes.rb file: <tt>resources :assets</tt>.</li>\n<li>I am using the new asset pipeline in Rails 3.1.</li>\n<li>I tried renaming the assets path like so: <tt>config.assets.prefix = \"/s\"</tt>, but it apparently didn't work.</li>\n<li>I can confirm its a name collision because if I comment out the resources line in config/routes.rb, there is no error.</li>\n</ul>\n<h4>Working Around the Assets Controller Name Collision</h4>\n<p>I figure there are a few options:</p>\n<ul>\n<li>Namespace my assets controller to be Accounts::AssetsController. I had originally opted agains that for simplicities sake, but it might be a solid solution. I do not want to namespace my models though.</li>\n<li>Find another configuration setting to alter the \"assets\" name for the asset pipeline. There is <tt>config.assets.manifest</tt>, but that is for pre-compiling assets, not accessing them.</li>\n</ul>\n<p>Ultimately it seems that the nexus of this problem is that the tag helpers do not use the custom <tt>config.assets.prefix</tt> value. Thankfully, there has been a <a href=\"https://github.com/rails/rails/commit/2684f17a17e4f97bdb89d20b4cd08585235263a2\">commit</a> to fix it. Alas, it seems to have been overlooked in recent tags and releases.</p>\n<p>As a quick workaround, I'm not using the tag helpers, just accessing the css files directly.</p>\n<p><strong>UPDATE</strong>: Hooray! Rails developer spastorino pulled request <a href=\"https://github.com/rails/rails/pull/3092\">3092</a> to fix this issue. That is so great. FWIW - my initial experience working with the Rails development community has been positively impressive.</p>\n<p>Â¥</p>","fields":{"slug":"/2011/09/a-problem-with-the-rails-31-asset-pipeline/"},"frontmatter":{"title":"A Problem with the Rails 3.1 Asset Pipeline...","date":"September 19th, 2011","tags":"errors"}}},"pageContext":{"slug":"/2011/09/a-problem-with-the-rails-31-asset-pipeline/"}},
    "staticQueryHashes": ["3159585216","758480095"]}