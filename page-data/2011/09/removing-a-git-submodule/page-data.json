{"componentChunkName":"component---src-templates-blog-post-js","path":"/2011/09/removing-a-git-submodule/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I'm noting these instructions on how to remove a git submodule for future reference:</p>\n<ol>\n<li>Delete the relevant line from the .gitmodules file.</li>\n<li>Delete the relevant section from .git/config.</li>\n<li>Run git rm --cached submodule_path.</li>\n<li>Commit and delete the now untracked submodule files.</li>\n<li>Run rm -rf submodule_path.</li>\n</ol>\n<p>In general, I'm not very fond of git submodules. They are very clunky and can get messed up so easily. Compared to subversion externals, they are not very useful in my humble opinion.</p>\n<p>Subversion externals acts just how I would expect - its a reference to another subversion repository within a subversion repository. Git submodules are pegged to a particulate commit of the other repository, and I've run into several problems with submodules becoming corrupt.</p>","fields":{"slug":"/2011/09/removing-a-git-submodule/"},"frontmatter":{"title":"Removing a Git Submodule","date":"September 24th, 2011","tags":"git,submodules"}}},"pageContext":{"slug":"/2011/09/removing-a-git-submodule/"}},"staticQueryHashes":["3159585216","3388129809"]}