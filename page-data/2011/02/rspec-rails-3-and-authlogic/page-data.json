{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2011/02/rspec-rails-3-and-authlogic/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I'm pleased I was able to get <strong>Rspec, Rails 3, and AuthLogic</strong> working, and to make it easier to do next time, I'm jotting down my notes here.</p>\n<p>The trick for me was to figure out how to use Factory Girl, which is a very nice replacement for fixtures, in my humble opinion.</p>\n<p>First off, let me clarify I didn't figure this out on my own. I found some very helpful hints in the usual places: StackOverflow, Ruby on Rails mailing lists, etc.</p>\n<p>I created a valid_user factory:</p>\n<pre class=\"sh_ruby\">\nFactory.define :valid_user, :class => User do |u|\n  u.login \"User\"\n  u.password \"password\"\n  u.password_confirmation \"password\"\n  u.email \"user@example.com\"\n  u.single_access_token \"kh3h93hfkhfl4hg8\"\nend\n</pre>\n<p>Then I included and activated AuthLogic in spec/spec_helper.rb:</p>\n<pre class=\"sh_ruby\">\nrequire \"authlogic/test_case\"\ninclude Authlogic::TestCase\n</pre>\n<p>At the start of each controller spec, I then included this:</p>\n<pre class=\"sh_ruby\">\n  before(:each) do\n    activate_authlogic\n    @user = Factory.create(:valid_user)\n    UserSession.create(@user)\n  end\n</pre>\n<p>The controller tests were easy to debug, but the views took a little more work.</p>\n<blockquote class=\"svxlb\"><pre>\nI ran into a similar issue, and was surprised to learn that Rspec does some impressive inference from the describe argument. For example:\n<pre><code>require 'spec_helper'\n\ndescribe \"bills/payments/edit.html.erb\" do\n  it \"Renders payment form\" do\n    assign(:payment, stub_model(Payment))\n    render\n  end\nend\n</code></pre>\n<p>Due to some evolutionary controller / view names, this test originally had:</p>\n<pre><code>describe \"bills/payment/edit.html.erb\" do\n</code></pre>\n<p>that really messed everything up, and even if I set the :template after render, it was unable to find a referenced partial. Fixing up the path in the describe statement fixed it all.\n</pre></p>\n<p>Â¥</p>","fields":{"slug":"/2011/02/rspec-rails-3-and-authlogic/"},"frontmatter":{"title":"Rspec Rails 3 and AuthLogic","date":"February 13th, 2011","tags":"authlogic,rails3,rspec,testing"}}},"pageContext":{"slug":"/2011/02/rspec-rails-3-and-authlogic/"}},
    "staticQueryHashes": ["3159585216","758480095"]}