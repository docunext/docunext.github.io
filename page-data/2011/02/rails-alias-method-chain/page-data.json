{"componentChunkName":"component---src-templates-blog-post-js","path":"/2011/02/rails-alias-method-chain/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>Today I wrote a plugin for Redmine and ended up using <tt>alias_method_chain</tt>.</p>\n<p>Its a very handy little method! What does  do? It allows for convenient overrides of methods built-in to a Ruby on Rails application.</p>\n<p>Its syntax sugar, really. This:</p>\n<pre class=\"sh_ruby\">\nalias_method_chain :mymethod, :origmethod\n</pre>\n<p>simply encapsulates these two calls:</p>\n<pre class=\"sh_ruby\">\nalias_method :mymethod_without_origmethod, :mymethod\nalias_method :mymethod, :mymethod_with_origmethod\n</pre>\n<p>A better way to explain this is:</p>\n<pre class=\"sh_ruby\">\nalias_method_chain :mymethod, :achange\n</pre>\n<p>which equals:</p>\n<pre class=\"sh_ruby\">\nalias_method :mymethod_without_achange, :mymethod\nalias_method :mymethod, :mymethod_with_achange\n</pre>","fields":{"slug":"/2011/02/rails-alias-method-chain/"},"frontmatter":{"title":"Rails alias method chain","date":"February 23rd, 2011","tags":"rails"}}},"pageContext":{"slug":"/2011/02/rails-alias-method-chain/"}}}