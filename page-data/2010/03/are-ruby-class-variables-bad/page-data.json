{"componentChunkName":"component---src-templates-blog-post-js","path":"/2010/03/are-ruby-class-variables-bad/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I've heard that they are, but I'm not convinced, especially if you have a class that get instantiated from a base module.</p>\n<p>I think I'm saying that right.... instance variables based upon module instantiation ruby...</p>\n<p>I'm still a little unsure though. Apparently there are some issues with it, but actually it doesn't really matter because I was only concerned with regard to the way I'm setting up Sinatra apps.</p>\n<p>Nowadays I use a shared base and thankfully the settings configuration interface works as I need it to.</p>","fields":{"slug":"/2010/03/are-ruby-class-variables-bad/"},"frontmatter":{"title":"Are Ruby class variables bad","date":"March 28th, 2010","tags":"classes,ruby,sinatra"}}},"pageContext":{"slug":"/2010/03/are-ruby-class-variables-bad/"}},"staticQueryHashes":["3159585216","3388129809"]}