{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2010/03/merging-git-repositories/",
    "result": {"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>This is an example task that shows how awesome git is.</p>\n<p>What exactly was I trying to do? I had a few ikiwiki repositories in subversion, and I decided I wanted to switch them to git. Then I figured I wanted to back them up at Github privately. Since Github limits the number of repositories and these wouldn't take up too much room, I decided to combine them.</p>\n<p>First thing I had to do was rewrite their history inside of a sub-folder instead of the root directory. <strong>git filter-branch</strong> to the rescue!</p>\n<p>Had some trouble with it though because I was using a subversion import...</p>\n<pre>Rewrite 422a38a0e9d2c61098b98e6c56213ac83b7bacc2 (1/42)mv: cannot stat `/home/.../wikis/nodows/.git-rewrite/t/../index.new': No such file or directory\n</pre>\n<p>It was the missing trunk folder. So instead of:</p>\n<pre>git filter-branch --index-filter \\\n        'git ls-files -s | sed \"s-\\t\\\"*-&nodows/-\" |\n                GIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n                        git update-index --index-info &&\n         mv $GIT_INDEX_FILE.new $GIT_INDEX_FILE' HEAD</pre>\n<p>I used:</p>\n<pre>\ngit filter-branch --index-filter \\\n        'git ls-files -s | sed \"s-\\t\\\"*-&nodows/-\" |\n                GIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n                        git update-index --index-info &&\n         mv $GIT_INDEX_FILE.new $GIT_INDEX_FILE' HEAD~40..HEAD</pre>\n<p>The \"40\" listed above depends on the repository I'm switching and filtering. There were 42 total commits in the svn repository. I'm working on another with 256:</p>\n<pre>r256 = eb6f0f706d5109f48a4e3e46b0de69498ec5877b (refs/remotes/trunk)</pre>\n<p>I'll try 255 first. Nope, 254 worked.</p>\n<p>Then its as simple as:</p>\n<pre>git remote add nodows ../nodows\ngit pull nodows</pre>\n<p>Yes, to merge two git repositories, all I had to do was add a remote reference and pull it in. The merge happens automatically, but if there are file conflicts, it will bail - hence the sub-folder task I started out with.</p>","fields":{"slug":"/2010/03/merging-git-repositories/"},"frontmatter":{"title":"Merging Git Repositories","date":"March 16th, 2010","tags":"git,merging,subversion"}}},"pageContext":{"slug":"/2010/03/merging-git-repositories/"}},
    "staticQueryHashes": ["2191495970","4224293195"]}