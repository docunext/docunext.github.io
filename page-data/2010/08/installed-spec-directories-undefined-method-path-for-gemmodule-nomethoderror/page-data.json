{"componentChunkName":"component---src-templates-blog-post-js","path":"/2010/08/installed-spec-directories-undefined-method-path-for-gemmodule-nomethoderror/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>I installed ruby1.9.1 and rubygems1.9.1 on a Debian squeeze machine today and was surprised by an error on the first try at running gem1.9.1.</p>\n<h2>The Full Error</h2>\n<pre class=\"sh_sh\">\n/usr/lib/ruby/1.9.1/rubygems/source_index.rb:68:in `installed_spec_directories': undefined method `path' for Gem:Module (NoMethodError)\n</pre>\n<p>To workaround this, I added this to <strong>/usr/lib/ruby/1.9.1/rubygems.rb</strong>:</p>\n<pre class=\"sh_ruby\">\nGem::QuickLoader.remove\n</pre>\n<p>on line 9.</p>\n<h2>Not Fixed</h2>\n<p>While that enables me to install gems, it prevents me from using them within Ruby scripts. Ugh.</p>\n<p>I ended up finding a machine that thankfully had all the debs from rubygems 1.3.6 which work for me.</p>\n<p>If anyone needs these, I can upload them to Amazon S3 or something.</p>\n<p>Â¥</p>","fields":{"slug":"/2010/08/installed-spec-directories-undefined-method-path-for-gemmodule-nomethoderror/"},"frontmatter":{"title":"installed spec directories undefined method path for Gem Module NoMethodError","date":"August 27th, 2010","tags":"errors,ruby,ruby 1.9"}}},"pageContext":{"slug":"/2010/08/installed-spec-directories-undefined-method-path-for-gemmodule-nomethoderror/"}}}