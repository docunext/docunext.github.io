{"componentChunkName":"component---src-templates-blog-post-js","path":"/2010/06/fake-googlebots/","result":{"data":{"site":{"siteMetadata":{"domain":"https://www.docunext.com"}},"markdownRemark":{"html":"<p>There are some HTTP clients accessing my web servers with strange request patterns. They include a header stating that they are a Googlebot, but its clear that they are <strong>fake googlebots</strong>.</p>\n<h4><strong>Detection of Fake Googlebots</strong></h4>\n<p>I noticed some HTTP clients spoofing Google's search crawler user-agent, aka \"Googlebot\", like these:</p>\n<pre class=\"sh_sh\">\n404 www.neosensorz.com \"GET /wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.014\n404 www.neosensorz.com \"GET /old/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.007\n404 www.neosensorz.com \"GET /cms/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.007\n404 www.neosensorz.com \"GET /blog/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.005\n404 www.neosensorz.com \"GET /blog_old/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.006\n404 www.neosensorz.com \"GET /blog-old/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.007\n404 www.neosensorz.com \"GET /blog/wp/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.006\n404 www.neosensorz.com \"GET /wp/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.006\n404 www.neosensorz.com \"GET /WP/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.004\n404 www.neosensorz.com \"GET /backup/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.006\n404 www.neosensorz.com \"GET /blog/backup/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.006\n404 www.neosensorz.com \"GET /wordpress/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.006\n404 www.neosensorz.com \"GET /Wordpress/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.005\n404 www.neosensorz.com \"GET /wordpress2/wp-login.php HTTP/1.1\" \"-\" \"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\" 67.19.102.242 0.008\n</pre>\n<p>I started to think about ways to automatically block them. I didn't figure that Google would provide a list of CIDR blocks, and based upon what I've read, it would appear that I was right, they don't. I read on their blog that they suggest using DNS to do a reverse lookup and see if it contains their domain name, like this:</p>\n<pre class=\"sh_sh\">\n$ dig -x 66.249.71.155\n; &lt;&lt;>> DiG 9.6.1-P1 &lt;&lt;>> -x 66.249.71.155\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 63653\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n;; QUESTION SECTION:\n;155.71.249.66.in-addr.arpa.\tIN\tPTR\n;; ANSWER SECTION:\n155.71.249.66.in-addr.arpa. 86400 IN\tPTR\tcrawl-66-249-71-155.googlebot.com.\n;; Query time: 157 msec\n;; SERVER: 192.168.1.1#53(192.168.1.1)\n;; WHEN: Tue Jun  1 02:49:14 2010\n;; MSG SIZE  rcvd: 91\n</pre>\n<p>Since I use NGINX as the front-most web server, I could manually set non-Google ip addresses in a <strong>\"map\"</strong> block and check them when the user-agent contains the Googlebot string, something like this:</p>\n<pre class=\"sh_c\">\nmap  $remote_addr  $nogip  {\ndefault 0;\n67.19.102.242 1;\n}\nif ($http_user_agent ~ Googlebot) {\n  set $noacc $nogip;\n}\nif ($http_user_agent !~ Googlebot) {\n  set $noacc 0;\n}\nif ($noacc = 1) {\n  return 503;\n}\n</pre>\n<p>I doubt I'll set this up though, its too specific!</p>","fields":{"slug":"/2010/06/fake-googlebots/"},"frontmatter":{"title":"Fake Googlebots","date":"June 1st, 2010","tags":"access control,google,security"}}},"pageContext":{"slug":"/2010/06/fake-googlebots/"}},"staticQueryHashes":["3159585216","3388129809"]}