{"componentChunkName":"component---src-templates-blog-post-js","path":"/2006/12/wordpress-cache-plugin/","result":{"data":{"markdownRemark":{"html":"<p>This Wordpress cache plugin uses Pear's Cache_Lite:</p>\n<blockquote>Plugin Name: Docunext Cache\n<p>Plugin URI:</p>\n<p>Description: Caching thanks to Pear's Cache Lite. This plugin will capture all output from</p>\n<p>wordpress, compress it using deflate, then cache it to /tmp/. When accessing the cached files,</p>\n<p>it will check to see if the client can accept deflated content. Accordingly, it will only cache if the requesting</p>\n<p>client supports deflate. If not, it will decompress the content.</p>\n<p>It will clear out the entire cache if anything is posted to the site. It attempts to support multiple domains.</p>\n<p>Supports client and server caching!</p>\n<p>Version: 0.1</p>\n<p>Author: Albert Lash</p>\n<p>Author URI: <a href=\"http://www.docunext.com\">http://www.docunext.com</a></p>\n<p>To do:</p>\n<ol>\n<li>Make sure varied placement of footer call doesn't break anything. Search for closing tags in output?</li>\n<li>Ability to store cache in various places - try to find a writeable folder.</li>\n<li>Ability to store to different backends - file, xcache, where else?</li>\n<li>Test with other plugins.</li>\n<li>How to manage lifetime? Is it necessary?</li>\n<li>Turn off caching for people who are logged in.</li>\n</ol>\n<p>Find potential directory targets:</p>\n<p>find -maxdepth 3 -name proc -prune -o -noleaf -user www-data -type d</p>\n<p>if there is no directory, just use memory?</blockquote></p>","frontmatter":{"title":"Wordpress Cache Plugin","date":"December 22nd, 2006"}}},"pageContext":{"slug":"/2006/12/wordpress-cache-plugin/"}}}