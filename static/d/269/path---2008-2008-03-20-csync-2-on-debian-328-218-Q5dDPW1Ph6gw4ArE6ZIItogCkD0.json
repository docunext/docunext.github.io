{"data":{"markdownRemark":{"html":"<p>I finally setup csync2 on debian - its nice! Its a simple sort of configuration tool that I need for now.</p>\n<p>I followed this <a href=\"http://zhenhuiliang.blogspot.com/2006/04/csync2-is-so-cool.html\">guide for setting up csync2 on redhat</a>, and then read the debian readme, which included instructions for creating keys:</p>\n<pre class=\"sh_sh\">csync2 for Debian-----------------\nYou need to create an SSL certificate for the local Csync2 server.\nYou can create a certificate using the following commands:\nopenssl genrsa -out /etc/csync2_ssl_key.pem 1024\nopenssl req -new -key /etc/csync2_ssl_key.pem -out /etc/csync2_ssl_cert.csr\nopenssl x509 -req -days 600 -in /etc/csync2_ssl_cert.csr \\        -signkey /etc/csync2_ssl_key.pem -out /etc/csync2_ssl_cert.pem\n</pre>\n<p>Then I also had to use the command \"csync2 -k /etc/csync2<em>ssl</em>cert.key\".</p>\n<p>I didn't have to do anything with openbsd.inetd other than restart it, and I'm not sure if that was even necessary. I initially typed in a peer's hostname wrong, so I had to remove the sqlite db in /var/lib/csync2/.</p>\n<p>I've only done one test but I like it so far! Hopefully I can use this to alleviate my current dependency on subversion for configuration files.</p>\n<p>UPDATE: I do have to restart openbsd-inetd to get csync2 to work right.</p>\n<p>More notes: * hostnames are tricky - the names in the /etc/csync2.cfg file need to be the same as the /etc/hostname for each member of the cluster. * I'm finding it easier to go server by server, using non-volatile files, and I'm including /etc/csync2.cfg in the list of files to sync so I can update them later</p>\n<p>Â¥</p>","frontmatter":{"title":"Csync2 on Debian"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2008/2008-03-20-csync2-on-debian/"}}