{"data":{"markdownRemark":{"html":"<h4>Dynamic Creation of Instance Methods In Ruby with define_method and method_missing</h4>\n<p>This is really, really cool. What does it do? If you are familiar with define_method, you know that it can dynamically define class methods. That is very cool!</p>\n<p>And if you are familiar with method_missing, you know that it can act as a \"catch-all\" for non-existent instance methods. Cool, huh?!?</p>\n<p>I only recently came to realize that the two can be used together, so define instance methods - first by catching non-existent method calls, then by defining the method, so that future calls to the same method would be optimized. Seriously, how cool is that!?</p>\n<p>This is actually how ActiveRecord manages the slew of Model access helpers it provides access to via methods like find_one_by_name('myname').</p>","frontmatter":{"title":"Dynamic Creation of Instance Methods In Ruby with define method and method missing","date":"February 28th, 2011"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2011/2011-02-28-dynamic-creation-of-instance-methods-in-ruby-with-define-method-and-method-missing/"}}