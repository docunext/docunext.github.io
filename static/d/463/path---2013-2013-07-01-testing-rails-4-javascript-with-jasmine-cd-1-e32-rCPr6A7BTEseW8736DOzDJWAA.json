{"data":{"markdownRemark":{"html":"<p>Rails version 4.0 is now official! Nothing drastic, but it represents very\nimportant improvements, including:</p>\n<ul>\n<li>Speed and process improvements for testing by combining the boot-up of Rails\nfor all test suites; use of Minitest (it rocks),</li>\n<li>Strong Parameters for restricting mass-assignments,</li>\n<li>Major improvements to cookie signing and encryption,</li>\n<li>\n<p>Removal of non-core Rails components, instead packaging them into gems:</p>\n<ul>\n<li>ActionPack Caching</li>\n<li>ActiveRecord session store</li>\n<li>ActiveResource</li>\n<li>ActionPack XML Parser</li>\n<li>Observers</li>\n</ul>\n</li>\n</ul>\n<p>FWIW, Rails 4.0 has been fine in production for one of my apps since the\nbeta version (via puma).</p>\n<h3>Testing Javascript with Jasmine</h3>\n<p>Inspired by Minitest, I've been prolific in test. And inspired by YUI3, I've\nbeen prolific with javascript (though I'm not using YUI in my hobby apps yet).</p>\n<p>Enter Jasmine - the javascript test kit from Pivotal Labs. Setting it up with\nRails 4 is simple. Here's what I use in a Gemfile:</p>\n<pre><code>group :test, :development do\n  gem 'jquery-rails'\n  gem 'jasmine-rails'\n  gem 'webmock'\nend\n</code></pre>\n<p>The base requirement is \"jasmine-rails\". From there, I edited\nspec/javascripts/support/jasmine.yml and wrote some tests in\nspec/javascripts/myapp/myspec.js, following this pattern:</p>\n<pre><code>//= require application\n\ndescribe(\"something\", function() {\n\n  it(\"should be an object\", function() {\n    expect(typeof(something)).toEqual(\"object\");\n  });\n\n});\n</code></pre>\n<p>I run the tests via \"bundle exec rake spec:javascripts\". To troubleshoot, I\nadd:</p>\n<pre><code>mount JasmineRails::Engine => \"/specs\" if defined?(JasmineRails)\n</code></pre>\n<p>to config/routes.rb, boot rails, and access the /specs page.</p>\n<p>The cool take home message I tell myself from this setup is that the jQuery\ntraining wheels can be taken off when I write my application javascript. I will\nsurely continue to use jQuery, but as one of my co-workers said, jquery is to\nphp as YUI3 is to Ruby. Unfortunately, I haven't found a secure YUI3 cdn that\nsupports SSL, so getting started with it isn't as easy as using the YUI3 seed\nfile.</p>\n<p>I've thought about serving locally:</p>\n<ul>\n<li><a href=\"http://blog.endpoint.com/2011/02/locally-served-yui3.html\">http://blog.endpoint.com/2011/02/locally-served-yui3.html</a></li>\n</ul>\n<p>But I would prefer to proxy and proxy-cache, and I think I've figured out how\nI can do so - with rack-reverse-proxy and nginx proxy. Sweet.</p>","frontmatter":{"title":"Rails 4.0 Released"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2013/2013-07-01-testing-rails4-javascript-with-jasmine/"}}