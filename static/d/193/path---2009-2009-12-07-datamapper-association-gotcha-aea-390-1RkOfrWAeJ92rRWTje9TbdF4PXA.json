{"data":{"markdownRemark":{"html":"<p>I've got a class that has a property that is the same name as the symbol for another class it has a \"belongs_to\" relationship with.</p>\n<pre class=\"sh_ruby\">\nclass Ledger\n  include DataMapper::Resource\n  property :id,Serial\n  property :posted_on,Integer\n  property :memorandum,String\n  property :amount,Integer\n  property :account_id,Integer\n  property :entry_id,Integer\n  property :entry_amount_id,Integer\n  property :fiscal_period_id,Integer\n  property :currency_id,Integer\n  belongs_to :account\n  belongs_to :entry\n  belongs_to :entry_amount, :class_name => 'Amount', :child_key => [ :entry_amount_id ]\nend\n</pre>\n<p>Looks like the docs at datamapper.org are a little out of sync with the version of datamapper I'm using, as they specify that something like this will work:</p>\n<pre class=\"sh_ruby\">\nclass Post\n  include DataMapper::Resource\n  belongs_to :author, :model => 'User', :child_key => [ :post_id ]\nend\n</pre>\n<p>I scoped out my cloned copy of the dm-core code and noticed the conspicuous options:</p>\n<pre class=\"sh_ruby\">\nOPTIONS = [ :class_name, :child_key, :parent_key, :min, :max, :through ]\n</pre>\n<p>and guessed \":class_name\" might work. Indeed it does! Nice. I have to remark that working with datamapper is intellectually rewarding.</p>\n<p>UPDATE: <a href=\"http://datamapper.lighthouseapp.com/projects/20609-datamapper/tickets/1146-minor-inconsistency-with-docs-and-reality\" rel=\"nofollow\">Issue has been logged</a>! Lighthouse looks nice, too. I'd previously only heard of it via my <a href=\"http://www.docunext.com/wiki/SD\">work with SD</a>.</p>\n<p>Â¥</p>","frontmatter":{"title":"DataMapper Association Gotcha"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2009/2009-12-07-datamapper-association-gotcha/"}}