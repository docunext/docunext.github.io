{"data":{"markdownRemark":{"html":"<p><strong>Stat</strong>\n<pre>\nstat -f &quot;%Sc&quot; -t &quot;%Y%m%d&quot; filename</pre></p>\n<p><strong>Rename Files</strong>\n<pre>\nfor i in *; do mv &quot;$i&quot; &quot;${i/whatsinheregoesaway/andisreplacedbythis}&quot;; done\n\nfor i in *; do mv &quot;$i&quot; &quot;${i}.doc&quot;; done</pre></p>\n<p>Make your swap partitions twice the size of your RAM amount.</p>\n<p>df - how much space is being used on storage devices</p>\n<p>A good filesystem benchmark: IOZone</p>\n<p>!Cool Linux Command:\n<p>ps aux --forest</p></p>\n<p>!To change mode of only files or directories - DO NOT USE THESE LIGHTLY!!!!:\n&lt;verbatim&gt;</p>\n<p>Remove .DS_Store files:\n<p>find . -name '.DS_Store' -exec rm {} ;</p></p>\n<p>Get all the users in a group:\n<p>grep \"groupname\" /etc/group | awk -F: '{print $4}'</p></p>\n<p>Remove command history:\n<p>ln -s /dev/null $HOME/.mysql_history</p>\n<p>or</p>\n<p>ln -s /dev/null $HOME/.bash_history</p></p>\n<p>Count # of files:\n<p>ls -1Ra | wc | awk '{printf(\"There are %s files in this directory!\\n\",$1-2)}'</p></p>\n<p>Define the following function, skill, aka &quot;Super  Kill&quot; in your .bashrc file. It finds the programs and terminate all the programs containing the give name!!\n          skill ()\n          {\n             kill -9 `ps ax | grep $1 | grep -v grep | awk '{print $1}'`\n          }\n<p>For example, skill netscape will terminate all the  Netscape related programs. Use this command with care. skill xterm will terminate all the running \"xterm\"s.  If you are scared, you can replace the first \"$1\" with a program  name you need to kill frequently, such as \"netscape\", and name the  function as \"killnet\". Here is an example.\nkillnet ()\n{\nkill -9 <code>ps ax | grep netscape | grep -v grep | awk '{print $1}'</code>\n}</p>\n<p>&#x3C;/verbatim></p></p>\n<p>!Patches:\n<p>diff -Naur old<em>dirorfile newdirorfile > name</em>of_patch.patch</p>\n<p>patch -p0 &#x3C; patch-file-name-here</p></p>\n<p>!Find\n<p>find ./ -type d -exec chmod 0700 {} ;</p></p>\n<p>!No Space:\n<p>for f in *; do\nfile=$(echo $f | tr A-Z a-z | tr -d '-')\nmv \"$f\" $file</p>\n<p>done</p></p>\n<p>!Detox\n<p>Useful for truncating and normalizing filenames</p></p>\n<p>!Untar to specific directory:\n  tar -C /var -xzf var-backup.tar.gz</p>\n<p>!RESUME\n<p>rsync --progress --partial -e ssh</p></p>\n<p>!mount Samba share on linux:\n<p>mount -t smbfs //hostname/share /targetdir/</p></p>\n<p><strong>Mac, Linux, and Windows Compatibility</strong></p>\n<ul>    <li>Apparently Linux supports HFS+ as a kernel module, it also supports AFP and Samba, which makes it very useful for transferring files between different types of hosts. </li>    <li>Mac saves ._* resource forks on non-HFS volumes, that is pretty lame. It might make sense to have an HFS+ filesystem on the LAN for Mac access, which is shared via Samba to PCs, and AFP to Macs. </li></ul><p><strong>The role of Partitions</strong></p>\n<ul>    <li>Partitions are very useful: you can have multiple OS's, and install the OS on a small partition for easier backup. Same with / and /boot/, you can back those up too. And just like the Gentoo manual says, you can have a partition for mail, or web, without worrying about the OS partition running out of room for basic functions like logging. </li></ul><p>mysqldump -u hostname -ppassword dbname | gzip -c | ssh -c blowfish username@hostname &quot;gunzip -c | mysql -u username -ppassword dbname&quot;</p>","frontmatter":{"title":"Linux Notes","date":"October 29th, 2006"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2006/10/linux-notes-2/"}}