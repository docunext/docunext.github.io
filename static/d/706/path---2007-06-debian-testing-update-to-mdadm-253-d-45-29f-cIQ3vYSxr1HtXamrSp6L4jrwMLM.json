{"data":{"markdownRemark":{"html":"<p>I just updated mdadm, and noticed the message recommending I read /usr/share/doc/mdadm/README.upgrading-2.5.3.gz:</p>\n<blockquote>\n<pre>\nUpgrading to mdadm 2.5.3 from previous versions===============================================\nWith version 2.5.3, the Debian mdadm package now requires a mdadm.conf file.\nThis file should be in /etc/mdadm/mdadm.conf, although /etc/mdadm.conf will\nalso be read if the former is not present, but it is less preferred.\nThe reason the configuration file is now required is because it was impossible\nto come up with robust heuristics to replace the previously used mdrun, while\naddressing its primary deficiency of not honouring the super-minor field and\nrandomly assembling devices (see #354705).\nAlso see /usr/share/doc/mdadm/README.mdrun\nSystems without a mdadm.conf file~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf your system does not have an mdadm.conf file, the package creates one for\nyou during the installation phase. Furthermore, a configuration file is\ncreated during the updating of the initramfs (initial ramdisk), if no file is\nfound at the time. In both cases, the running system is used as a reference,\nmeaning that the file is generated automatically in such a way as to reflect\nthe running system.\nThis should work in most cases. I strongly suggest, however, that you inspect\nthe generated file (/etc/mdadm/mdadm.conf) before you reboot. If you find any\nanomaly or mistakes, correct them and proceed with the next step (\"Systems\nwith a mdadm.conf file\").\nSystems with a mdadm.conf file~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIf an existing configuration file is found, it is *ignored* until you checked\nit and gave mdadm permission to use it. Even though this is a nuisance to some\nusers, it is a necessary measure: previous versions of mdadm did not\nnecessarily use the information in this file, even if it existed; thus there\nis no guarantee that the file properly describes the system's configuration.\nTherefore, you are required to inspect /etc/mdadm/mdadm.conf or/etc/mdadm.conf (whichever one is present, the first gets priority if both are\npresent) and ensure that all arrays are properly identified. Here are a number\nof recommended checks:  - Verify that all arrays referenced by /etc/fstab, /etc/crypttab, your LVM    metadata, and whatever other subsystem uses MD arrays (RAIDs) on your    machine have a corresponding line in the configuration file.    Make sure to verify that your bootloader refers to the proper device name,    in case your root filesystem is on an MD array.    In particular, verify that the device node name is exactly the same;    /dev/md6 is *not* identical to /dev/md/6. Partitionable arrays are    a slight exception: if /dev/md_d0p3 is referenced, you need an entry for    /dev/md_d0 in the configuration file.  - Compare your file with the output of /usr/share/mdadm/mkconf . In    particular, make sure that the UUID matches for each array, whenever    a UUID is specified. Also compare the values of super-minor, name, and    devices. Only one match identifier (UUID, super-minor, name, devices) is    needed for each array, but if multiple identifiers are specified, all must    match. See mdadm.conf(5).    Identifying arrays by UUID is the preferred method.\nOnce you have verified that the configuration file is accurate, you need to\nlet mdadm know, and update the initial ramdisk. This is accomplished with the\nfollowing two commands:  rm -f /var/lib/mdadm/CONF-UNCHECKED  update-initramfs -u -k all\nDepending on your setup, mdadm should print an appropriate informational\nmessage. Please make sure that it is in accordance with what you would expect.\nWhat to do if my system does not boot anymore?~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFirst thing: don't panic! If your system does not boot anymore as a result of\nan mdadm upgrade, it is *very* unlikely that you lost any data.\nHaving said that, it is important that you exercise great care and understand\nwhat you are doing. If you do not know how to revive a system that does not\nboot because it fails to assemble MD arrays (RAIDs), consider asking someone\nwho does for help.\nIf you are using initramfs (which is the default since Debian \"etch\"), it will\nprobably be easy to revive the system. If you are experiencing problems with\nanother initial ramdisk alternative, you will have to resort to using a rescue\ndisk, such as the debian-installer CD/DVD, or a live system, such as Knoppix.\nWith initramfs, specify 'break=mount' as a kernel boot command line option,\nand commence the boot process. Eventually, you will be dumped into a shell.\nFrom here, you can execute  ./scripts/local-top/mdadm\nand inspect the output. If you want to see what exactly the script is doing,\nrun  sh -x ./scripts/local-top/mdadm\ninstead.\nYour primary goal is the assembly of the array(s) needed to bring up your root\nfilesystem. If the above script fails to do that, take note of its output (for\na later bug report), and then proceed to simply assemble the array by hand.\nFor instance, if your root array is on /dev/md1, which is made up of/dev/sd[abc]1, just run:  /sbin/mdadm -A --auto=yes /dev/md1 --run /dev/sd[abc]1  /sbin/mdadm -Q /dev/md1  # to verify\nIf your root filesystem is on multiple arrays (e.g. on LVM), repeat for each\nconstituent array.\nWhen you are done, hit ctrl-d and watch the system boot.\nWhen it is back up, carefully inspect your mdadm.conf file and ensure that\nINITRDSTART is properly set in /etc/default/mdadm; set it to 'all' to be safe.\nIn case you are not using initramfs, you need to find out what's going wrong\nduring the boot process. Both yaird and initrd use a single mdadm --assemble\ncall to bring up the device holding the root filesystem. If that command\nfails, you may need to recreate the image and make sure it gets the right\nparameters.\nIf you rely on the kernel to assemble the arrays (MD support built-in, not\nmodular, and partitions of type 0xfd) and the process fails, the superblock\ninformation is probably not accurate. In such a case, try to assemble the\narrays from a rescue disc or live system just as you would expect the kernel\nto do it. Afterwards, verify the superblock information (mdadm --examine).\nIf you continue to experience problems, please file a bug report with all the\nrelevant information. The reportbug tool will automatically include the most\nrelevant data in the report. -- martin f. krafft <madduck@debian.org>\n  Mon, 23 Sep 2006 23:49:10 +0100$Id: README.initramfs-transition 89 2006-08-08 09:33:05Z madduck $</madduck@debian.org>\n</pre>\n</blockquote>\n<p>Ugh. I'll have to take care of this on Monday.</p>","frontmatter":{"title":"Debian testing update to mdadm 2.5.3","date":"June 2nd, 2007"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2007/06/debian-testing-update-to-mdadm-253/"}}