{"data":{"markdownRemark":{"html":"<p>I'm installing libsinatra-ruby1.8 on my debian development machine, aka \"dev-48-gl\".</p>\n<pre class=\"sh_sh\">\nsudo apt-get install libsinatra-ruby1.8\nThe following extra packages will be installed:\n  librack-ruby1.8\nSuggested packages:\n  mongrel thin1.8\nThe following NEW packages will be installed:\n  librack-ruby1.8 libsinatra-ruby1.8\n0 upgraded, 2 newly installed, 0 to remove and 414 not upgraded.\nNeed to get 164kB of archives.\nAfter this operation, 614kB of additional disk space will be used.\nDo you want to continue [Y/n]?\n</pre>\n<p>So librack-ruby1.8 gets installed too.</p>\n<p>SIDE NOTE: The debian description of libsinatra-ruby1.8 is:</p>\n<blockquote><pre>\nRuby web-development dressed in a DSL\n</pre></blockquote>\n<p>What does DSL mean? Its one of those common acronyms which has multiple meanings. In this context, it refers to \"Domain-specific language\", which as of November 2009, is described at Wikipedia in this way:</p>\n<blockquote class=\"svxlb\"><pre>\nIn software development, a domain-specific language (DSL) is a programming language or specification language dedicated to a particular problem domain, a particular problem representation technique, and/or a particular solution technique. The concept isn't new--special-purpose programming languages and all kinds of modeling/specification languages have always existed, but the term has become more popular due to the rise of domain-specific modeling.\n</pre></blockquote>\n<p>OK, fair enough. Does this have anything to do with the popularity of model-view-controller (MVC) frameworks, or is it an alternative to those? Ruby on Rails (RoR) is an MVC. Is Sinatra as well? I should probably know the answer to these questions, but I'm still learning about MVCs - mostly with <a href=\"http://www.docunext.com/\" title=\"My wiki notes on Catalyst\">Catalyst</a>. I've worked on RoR apps before and built some test apps with it. Thanks to <a href=\"http://www.docunext.com/2009/08/heroku/\" title=\"My notes on Heroku at docunext.com\">Heroku</a>, I was able to try out a Sinatra application as well.</p>\n<p>This time I want to dig deeper!</p>\n<p>My first step is just the demo on the <a href=\"http://www.sinatrarb.com/\">Sinatra homepage</a>:</p>\n<pre class=\"sh_ruby\">\nrequire 'rubygems'\nrequire 'sinatra'\nget '/hi' do\n  \"Hello World!\"\nend\n</pre>\n<p>and then...</p>\n<pre class=\"sh_sh\">\n$ ruby !$\nruby hi.rb\n== Sinatra/0.9.4 has taken the stage on 4567 for development with backup from WEBrick\n[2009-11-22 14:46:51] INFO  WEBrick 1.3.1\n[2009-11-22 14:46:51] INFO  ruby 1.8.7 (2009-06-12) [i486-linux]\n[2009-11-22 14:46:56] INFO  WEBrick::HTTPServer#start: pid=15683 port=4567\n192.168.1.240 - - [22/Nov/2009 14:46:57] \"GET /hi HTTP/1.1\" 200 12 0.0045\nwrk-240-gr.savonix.com - - [22/Nov/2009:14:46:57 EST] \"GET /hi HTTP/1.1\" 200 12\n- -> /hi\n^C\n== Sinatra has ended his set (crowd applauds)\n[2009-11-22 14:47:01] INFO  going to shutdown ...\n[2009-11-22 14:47:01] INFO  WEBrick::HTTPServer#start done.\n</pre>\n<p>Right now its using WEBrick. For part II, I'll setup thin1.8.</p>","frontmatter":{"title":"Using Sinatra on Debian Part I","date":"November 22nd, 2009"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2009/11/using-sinatra-on-debian-part-i/"}}