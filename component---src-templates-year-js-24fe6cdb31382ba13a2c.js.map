{"version":3,"file":"component---src-templates-year-js-24fe6cdb31382ba13a2c.js","mappings":"iIAIMA,EAAW,SAACC,GAAD,OACf,sBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,gBAAC,KAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAGzBC,EAAU,SAACN,GAAD,OACd,uBAAKC,MAAO,CAAEM,QAAQ,UAAaP,EAAMK,WAG3C,aAAe,GAAmB,IAAhBA,EAAe,EAAfA,SACVG,GAAOC,EAAAA,EAAAA,IAAe,cAW5B,OACE,gBAACH,EAAD,KACE,uBACEL,MAAO,CACLS,OAAO,WACPC,SAAS,UAGX,0BAAQV,MAAO,CAAEW,aAAa,WAC5B,sBAAIX,MAAO,CAAEY,UAAU,OAASC,MAAM,UACpC,gBAACf,EAAD,CAAUK,GAAE,WAAZ,UAEF,gBAAC,KAAD,CAAMA,GAAE,KACN,sBACEH,MAAO,CACLc,UAAW,EACXb,QAAQ,eACRc,UAAU,WAGXR,EAAKS,KAAKC,aAAaC,SAI9B,2BAECd,M,6CCjDT,eAAe,OACb,gBAAC,KAAD,CACEe,MAAK,YAeLC,KAAG,EACHC,MAAI,EACJC,OAAQ,SAACf,GAAD,OACN,2BACE,gDACCA,EAAKgB,aAAaC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC3B,wBAAMC,IAAKD,EAAKE,IACd,gBAAC,KAAD,CACEzB,GAAIuB,EAAKG,aAAaC,MAAM,SAAS,GAAK,IAC1C9B,MAAO,CACLM,QAAQ,QACRyB,eAAe,OACfC,MAAM,YAGR,4BAAON,EAAKG,aAAaC,MAAM,KAAK,KATxC,c,wECpBV,mBAAe,OAAGvB,EAAH,EAAGA,KAAH,OACb,gBAAC,IAAD,KACE,2BACGA,EAAK0B,kBAAkBT,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,uBAAKC,IAAKD,EAAKE,IACb,gBAAC,KAAD,CACEzB,GAAIuB,EAAKQ,OAAOC,KAChBnC,MAAO,CACL+B,eAAe,OACfC,MAAM,YAGR,sBACEhC,MAAO,CACLW,aAAa,MACbyB,SAAS,SAGVV,EAAKW,YAAYnB,MAAO,IACzB,wBACElB,MAAO,CACLgC,MAAM,SAFV,KAKKN,EAAKW,YAAYC,OAGxB,yBAAIZ,EAAKa,cAIf,gBAAC,IAAD","sources":["webpack://docunext/./src/components/layout.js","webpack://docunext/./src/components/years.js","webpack://docunext/./src/templates/year.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport \"typeface-roboto\"\n\nconst ListLink = (props) => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\nconst Wrapper = (props) => (\n  <div style={{ padding: `10px;` }}>{props.children}</div>\n)\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n    <Wrapper>\n      <div\n        style={{\n          margin: `3em auto`,\n          maxWidth: `700px`,\n        }}\n      >\n        <header style={{ marginBottom: `1.5rem` }}>\n          <ul style={{ listStyle: `none`, float: `right` }}>\n            <ListLink to={`/about/`}>About</ListLink>\n          </ul>\n          <Link to={`/`}>\n            <h1\n              style={{\n                marginTop: 0,\n                display: `inline-block`,\n                fontStyle: `normal`,\n              }}\n            >\n              {data.site.siteMetadata.title}\n            </h1>\n          </Link>\n        </header>\n        <hr />\n\n        {children}\n      </div>\n    </Wrapper>\n  )\n}\n","import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDirectory(\n          filter: { relativePath: { regex: \"//20..$/\" } }\n          sort: { fields: name }\n        ) {\n          edges {\n            node {\n              id\n              relativePath\n            }\n          }\n        }\n      }\n    `}\n    let\n    year\n    render={(data) => (\n      <div>\n        <span>Yearly Indexes: </span>\n        {data.allDirectory.edges.map(({ node }) => (\n          <span key={node.id}>\n            <Link\n              to={node.relativePath.split(\"pages\")[1] + \"/\"}\n              style={{\n                padding: `0 2px`,\n                textDecoration: `none`,\n                color: `inherit`,\n              }}\n            >\n              <span>{node.relativePath.split(\"/\")[1]}</span>\n            </Link>\n            &#160;\n          </span>\n        ))}\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Years from \"../components/years\"\n\nexport default ({ data }) => (\n  <Layout>\n    <div>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link\n            to={node.fields.slug}\n            style={{\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n          >\n            <h3\n              style={{\n                marginBottom: `4px`,\n                fontSize: `18px`,\n              }}\n            >\n              {node.frontmatter.title}{\" \"}\n              <span\n                style={{\n                  color: `#bbb`,\n                }}\n              >\n                â€” {node.frontmatter.date}\n              </span>\n            </h3>\n            <p>{node.excerpt}</p>\n          </Link>\n        </div>\n      ))}\n      <Years />\n    </div>\n  </Layout>\n)\n\nexport const query = graphql`\n  query($dir: String!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $dir } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"names":["ListLink","props","style","display","marginRight","to","children","Wrapper","padding","data","useStaticQuery","margin","maxWidth","marginBottom","listStyle","float","marginTop","fontStyle","site","siteMetadata","title","query","let","year","render","allDirectory","edges","map","node","key","id","relativePath","split","textDecoration","color","allMarkdownRemark","fields","slug","fontSize","frontmatter","date","excerpt"],"sourceRoot":""}