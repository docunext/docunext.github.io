{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/year.js","webpack:///./src/components/years.js"],"names":["ListLink","props","style","display","marginRight","to","children","Wrapper","padding","data","useStaticQuery","margin","maxWidth","fontFamily","marginBottom","listStyle","float","marginTop","fontStyle","site","siteMetadata","title","allMarkdownRemark","edges","map","node","key","id","fields","slug","textDecoration","color","frontmatter","date","excerpt","query","let","year","render","allDirectory","filter","edge","relativePath","match","sort","split"],"mappings":"2FAAA,qCAIMA,GAJN,UAIiB,SAACC,GAAD,OACf,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,IAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,aAGzBC,EAAU,SAACN,GAAD,OACd,yBAAKC,MAAO,CAAEM,QAAQ,UAAaP,EAAMK,WAG5B,gBAAmB,IAAhBA,EAAe,EAAfA,SACVG,EAAOC,YAAe,cAW5B,OACE,kBAACH,EAAD,KACE,yBACEL,MAAO,CACLS,OAAO,SACPC,SAAS,QACTC,WAAW,cAGb,4BAAQX,MAAO,CAAEY,aAAa,WAC5B,wBAAIZ,MAAO,CAAEa,UAAU,OAASC,MAAM,UACpC,kBAAChB,EAAD,CAAUK,GAAE,WAAZ,UAEF,kBAAC,IAAD,CAAMA,GAAE,KACN,wBACEH,MAAO,CACLe,UAAW,EACXd,QAAQ,eACRe,UAAU,WAGXT,EAAKU,KAAKC,aAAaC,SAI9B,6BAECf,M,kCCpDT,0GAKe,0BAAGG,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,6BACGA,EAAKa,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,IAAD,CACEtB,GAAIoB,EAAKG,OAAOC,KAChB3B,MAAO,CACL4B,eAAe,OACfC,MAAM,YAGR,wBACE7B,MAAO,CACLY,aAAa,QAGdW,EAAKO,YAAYX,MAAO,IACzB,0BACEnB,MAAO,CACL6B,MAAM,SAFV,KAKKN,EAAKO,YAAYC,OAGxB,2BAAIR,EAAKS,cAIf,kBAAC,IAAD,SAKC,IAAMC,EAAK,c,yDCxClB,qCAEe,sBACb,kBAAC,IAAD,CACEA,MAAK,aAYLC,KAAG,EACHC,MAAI,EACJC,OAAQ,SAAC7B,GAAD,OACN,6BACE,kDACCA,EAAK8B,aAAahB,MAChBiB,QAAO,SAACC,GACP,OAAOA,EAAKhB,KAAKiB,aAAaC,MAAM,cAErCC,OACApB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACH,0BAAMC,IAAKD,EAAKE,IACd,kBAAC,IAAD,CACEtB,GAAIoB,EAAKiB,aAAaG,MAAM,KAAK,GACjC3C,MAAO,CACLM,QAAQ,QACRsB,eAAe,OACfC,MAAM,YAGR,8BACGN,EAAKiB,aAAaG,MAAM,KAAK,KAVpC","file":"component---src-templates-year-js-c7a81ec381778ad7dc8e.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport \"typeface-noto-sans\"\n\nconst ListLink = (props) => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\nconst Wrapper = (props) => (\n  <div style={{ padding: `10px;` }}>{props.children}</div>\n)\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n    <Wrapper>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `700px`,\n          fontFamily: `Noto-Sans`\n        }}\n      >\n        <header style={{ marginBottom: `1.5rem` }}>\n          <ul style={{ listStyle: `none`, float: `right` }}>\n            <ListLink to={`/about/`}>About</ListLink>\n          </ul>\n          <Link to={`/`}>\n            <h1\n              style={{\n                marginTop: 0,\n                display: `inline-block`,\n                fontStyle: `normal`\n              }}\n            >\n              {data.site.siteMetadata.title}\n            </h1>\n          </Link>\n        </header>\n        <hr />\n\n        {children}\n      </div>\n    </Wrapper>\n  )\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Years from \"../components/years\"\n\nexport default ({ data }) => (\n  <Layout>\n    <div>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link\n            to={node.fields.slug}\n            style={{\n              textDecoration: `none`,\n              color: `inherit`\n            }}\n          >\n            <h3\n              style={{\n                marginBottom: `4px`\n              }}\n            >\n              {node.frontmatter.title}{\" \"}\n              <span\n                style={{\n                  color: `#bbb`\n                }}\n              >\n                â€” {node.frontmatter.date}\n              </span>\n            </h3>\n            <p>{node.excerpt}</p>\n          </Link>\n        </div>\n      ))}\n      <Years />\n    </div>\n  </Layout>\n)\n\nexport const query = graphql`\n  query($dir: String!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: $dir } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDirectory {\n          edges {\n            node {\n              id\n              relativePath\n            }\n          }\n        }\n      }\n    `}\n    let\n    year\n    render={(data) => (\n      <div>\n        <span>Yearly Indexes: </span>\n        {data.allDirectory.edges\n          .filter((edge) => {\n            return edge.node.relativePath.match(/\\/20..$/)\n          })\n          .sort()\n          .map(({ node }) => (\n            <span key={node.id}>\n              <Link\n                to={node.relativePath.split(\"/\")[1]}\n                style={{\n                  padding: `0 2px`,\n                  textDecoration: `none`,\n                  color: `inherit`,\n                }}\n              >\n                <span>\n                  {node.relativePath.split(\"/\")[1]}\n                </span>\n              </Link>\n              &#160;\n            </span>\n          ))}\n      </div>\n    )}\n  />\n)\n"],"sourceRoot":""}