{"data":{"markdownRemark":{"html":"<p>Here are some notes I'm taking about the cool Bespin editor from Mozilla labs:</p>\n<ul>\n<li>\nDivided into two parts: frontend and backend</li>\n<li>\nRuns as a python web server, uses sqlite3 (awesome!) as a database for user (and file?) storage, build from WSGI components (Paste, SQLAlchemy)</li>\n<li>\nI would like to set strictlines on permanently</li>\n<li>\n<del>\nIt runs locally unless: paver server.open=1 server.port=8000 start</del>\n - format has changed to use server.address=...</li>\n</ul>\n<p>Questions:</p>\n<ul>\n<li>\nI'd like to create my own backend using other components: NGINX, DAV, Apache2, or something along those lines, especially DAV.</li>\n<li>\nI'd like to try manipulating some of the editor behavior - like closing tags, using spaces for tabs, etc., maybe even make it more like vim!</li>\n</ul>\n<p>Database Tables:</p>\n<pre class=\"sql\">\nCREATE TABLE directories (\tid INTEGER NOT NULL, \tproject_id INTEGER NOT NULL, \tname VARCHAR(700) NOT NULL, \tparent_id INTEGER, \tPRIMARY KEY (id), \t FOREIGN KEY(project_id) REFERENCES projects (id) ON DELETE cascade, \t UNIQUE (project_id, name), \t FOREIGN KEY(parent_id) REFERENCES directories (id) ON DELETE cascade);\nCREATE TABLE files (\tid INTEGER NOT NULL, \tproject_id INTEGER NOT NULL, \tname VARCHAR(700) NOT NULL, \tcreated TIMESTAMP, \tmodified TIMESTAMP, \tsaved_size INTEGER, \tdata BLOB, \tedits BLOB, \tdir_id INTEGER, \tPRIMARY KEY (id), \t FOREIGN KEY(project_id) REFERENCES projects (id) ON DELETE cascade, \t UNIQUE (project_id, name), \t FOREIGN KEY(dir_id) REFERENCES directories (id) ON DELETE cascade);\nCREATE TABLE filestatus (\tuser_id INTEGER NOT NULL, \tfile_id INTEGER NOT NULL, \tread_only BOOLEAN, \tPRIMARY KEY (user_id, file_id), \t FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE cascade, \t FOREIGN KEY(file_id) REFERENCES files (id) ON DELETE cascade);\nCREATE TABLE members (\tproject_id INTEGER, \tuser_id INTEGER, \t FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE cascade, \t FOREIGN KEY(project_id) REFERENCES projects (id) ON DELETE cascade);\nCREATE TABLE migrate_version (\trepository_id VARCHAR(255) NOT NULL, \trepository_path TEXT, \tversion INTEGER, \tPRIMARY KEY (repository_id));\nCREATE TABLE projects (\tid INTEGER NOT NULL, \tname VARCHAR(60) NOT NULL, \tuser_id INTEGER NOT NULL, \tPRIMARY KEY (id), \t FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE cascade, \t UNIQUE (user_id, name));\nCREATE TABLE users (\tid INTEGER NOT NULL, \tusername VARCHAR(128), \temail VARCHAR(128), \tpassword VARCHAR(20), \tsettings BLOB, \tquota INTEGER, \tamount_used INTEGER, \tPRIMARY KEY (id), \t UNIQUE (username));</pre>\n<p>I'm working on a page in the wiki here: <a href=\"http://www.docunext.com/wiki/Bespin\">\nBespin at the Docunext Wiki</a></p>","frontmatter":{"title":"Bespin Guts"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2009/2009-03-04-bespin-guts/"}}