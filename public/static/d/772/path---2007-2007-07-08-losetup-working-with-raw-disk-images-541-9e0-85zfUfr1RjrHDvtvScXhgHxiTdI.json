{"data":{"markdownRemark":{"html":"<p>When working with virtual machines and embedded devices, you'll probably end up working with a disk image at some point.</p>\n<p>To work with disk images in gnu/linux, you can attach the file to the a device. To do so, you use the losetup command (which requires root privileges).</p>\n<pre class=\"sh_sh\">usage:\n  losetup [options] loop_device file        # setup\n  losetup -F [options] loop_device [file]   # setup, read /etc/fstab\n  losetup loop_device                       # give info\n  losetup -a                                # give info of all loops\n  losetup -f                                # show next free loop device\n  losetup -d loop_device                    # delete\n  losetup -R loop_device                    # resize\noptions:  -e encryption  -o offset  -s sizelimit  -p passwdfd  -T  -S pseed\n          -H phash  -I loinit  -K gpgkey  -G gpghome  -C itercountk  -v  -r\n          -P cleartextkey\n</pre>\n<p>The challenge is if the disk image has multiple partitions. Though the loop device will be aware of the different partitions (which you can view with fdisk, and you'll need to in order to get the offset number required to mount the last partition), you can't access them all at once.</p>\n<p>So far I only know how to mount the last partition on the disk image. You find out the offset of that partition, and attach it to the loopback device:</p>\n<pre class=\"sh_sh\">losetup -o52428800 /dev/loop0 debian-sarge-256-hda.img\nmount -text3 /dev/loop0 /mnt/debian-sarge-cf/</pre>\n<p>It works! How to find out the offset? Use fdisk on the loopback device when the entire image is attached to it:</p>\n<pre class=\"sh_sh\">losetup /dev/loop0 debian-sarge-256-hda.img\nfdisk /dev/loop0\nCommand (m for help): p\nDisk /dev/loop0: 232 MB, 232783872 bytes\n16 heads, 32 sectors/track, 888 cylinders\nUnits = cylinders of 512 * 512 = 262144 bytes\nDevice Boot      Start         End      Blocks   Id  System\n/dev/loop0p1   *           1          80       20479+  83  Linux\n/dev/loop0p2              81         200       30720   83  Linux\n/dev/loop0p3             201         888      176128   83  Linux\nCommand (m for help): u\nChanging display/entry units to sectors\nCommand (m for help): p\nDisk /dev/loop0: 232 MB, 232783872 bytes\n16 heads, 32 sectors/track, 888 cylinders, total 454656 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nDevice Boot      Start         End      Blocks   Id  System\n/dev/loop0p1   *           1       40959       20479+  83  Linux\n/dev/loop0p2           40960      102399       30720   83  Linux\n/dev/loop0p3          102400      454655      176128   83  Linux\n</pre>\n<p>Use the \"u\" command in fdisk to change the units, then multiply the start number times 512, 102400 * 512 = 52428800.</p>\n<p>Actually - turns out this also works on partitions other than the last one. For example, I just mounted the second partition by using the 40960 offset, multiplied by 512 = 20971520:</p>\n<pre class=\"sh_sh\"># losetup -o20971520 /dev/loop0 debian-sarge-256-hda.img\n# mount -text3 /dev/loop0 /mnt/debian-sarge-cf/</pre>\n<p>Â¥</p>","frontmatter":{"title":"Losetup Working with Raw Disk Images","date":"2007-07-08T00:00:00.000Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2007/2007-07-08-losetup-working-with-raw-disk-images/"}}