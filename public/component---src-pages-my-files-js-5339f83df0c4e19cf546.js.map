{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","allFile","edges","map","_ref2","index","node","key","relativePath","birthTime","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2012__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2012__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","wpTheme","plugins","CodePlugin","typography","Typography","ListLink","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","style","display","marginRight","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","Wrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","_ref3","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","css","marginBottom","site","siteMetadata","title","listStyle","float","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-my-files-js-5339f83df0c4e19cf546.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div>Hello world</div>\n      <table>\n      <tbody>\n\t  {data.allFile.edges.map(({ node }, index) => (\n\t      <tr key={index}>\n              <td>{node.relativePath}</td>\n              <td>{node.birthTime}</td>\n          </tr>\n      ))}\n      </tbody>\n      </table>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport wpTheme from \"typography-theme-wordpress-2012\"\nimport CodePlugin from 'typography-plugin-code'\n\nwpTheme.plugins = [\n      new CodePlugin(),\n]\n\nconst typography = new Typography(wpTheme)\n\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from \"react\"\nimport { Global, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\nconst Wrapper = styled(\"div\")`\n    padding: 10px;`\n\nexport default ({ children }) => {\n\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return ( \n      <Wrapper>\n          <Global \n            styles={css`\n                h2 {\n                    margin: 0;\n                }\n            `}\n          />\n          <div\n            css={css`\n            margin: 0 auto;\n            max-width: 700px;\n            padding: ${rhythm(2)};\n            padding-top: ${rhythm(1.5)};\n            `}\n          >\n            <header style={{ marginBottom: `1.5rem` }}>\n                <Link to={`/`}>\n                  <h1\n                    css={css`\n                    margin-top: 0;\n                    margin-bottom: ${rhythm(1)};\n                    display: inline-block;\n                    font-style: normal;\n                    `}\n                  >\n                    {data.site.siteMetadata.title} \n                  </h1>\n                </Link>\n                <ul style={{ listStyle: `none`, float: `right` }}>\n                    <ListLink\n                      to={`/about/`}\n                      css={css`\n                      float: right;\n                      `}\n                    >\n                      About\n                    </ListLink>\n                </ul>\n            </header>\n            <hr />\n\n            {children}\n          </div>\n      </Wrapper>\n  )\n}\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}