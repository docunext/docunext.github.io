{"version":3,"sources":["webpack:///./src/components/years.js","webpack:///./src/templates/blog-post.js"],"names":["query","let","year","render","data","allDirectory","edges","filter","edge","node","relativePath","match","sort","map","key","id","to","split","css","rhythm","Date","props","style","fontSize","color","margin","paddingTop","marginBottom","children","post","markdownRemark","canonicalLink","site","siteMetadata","domain","fields","slug","frontmatter","title","rel","href","date","dangerouslySetInnerHTML","__html","html"],"mappings":"uQAIe,sBACb,YAAC,IAAD,CACEA,MAAK,aAYLC,KAAG,EACHC,MAAI,EACJC,OAAQ,SAAAC,GAAI,OACV,uBACE,4CACCA,EAAKC,aAAaC,MAChBC,QAAO,SAAAC,GACN,OAAOA,EAAKC,KAAKC,aAAaC,MAAM,cAErCC,OACAC,KAAI,gBAAGJ,EAAH,EAAGA,KAAH,OACH,oBAAMK,IAAKL,EAAKM,IACd,YAAC,IAAD,CACEC,GAAIP,EAAKC,aAAaO,MAAM,KAAK,GACjCC,IAAG,GAMH,oBACEA,IAAKA,YAAF,iBACgBC,YAAO,EAAI,GAD3B,MAIFV,EAAKC,aAAaO,MAAM,KAAK,KAdpC,UAxBV,W,ksSCLF,2GAMMG,EAAO,SAAAC,GAAK,OAChB,mBACEC,MAAO,CACLC,SAAS,MACTC,MAAM,OACNC,OAAO,IACPC,WAAW,MACXC,aAAa,SAGdN,EAAMO,WAII,sBAAe,IAAZxB,EAAW,EAAXA,KACVyB,EAAOzB,EAAK0B,eACZC,EAAa,GAAM3B,EAAK4B,KAAKC,aAAaC,OAASL,EAAKM,OAAOC,KACrE,OACE,YAAC,IAAD,KACE,YAAC,SAAD,KACE,yBAAQP,EAAKQ,YAAYC,OACzB,oBAAMC,IAAI,YAAYC,KAAMT,KAE9B,uBACE,sBAAKF,EAAKQ,YAAYC,OACtB,YAAClB,EAAD,KAAOS,EAAKQ,YAAYI,MACxB,mBAAKC,wBAAyB,CAAEC,OAAQd,EAAKe,QAC7C,YAAC,IAAD,SAMD,IAAM5C,EAAK","file":"component---src-templates-blog-post-js-63d77f79af88be0fb173.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDirectory {\n          edges {\n            node {\n              id\n              relativePath\n            }\n          }\n        }\n      }\n    `}\n    let\n    year\n    render={data => (\n      <div>\n        <span>Yearly Indexes: </span>\n        {data.allDirectory.edges\n          .filter(edge => {\n            return edge.node.relativePath.match(/\\/20..$/)\n          })\n          .sort()\n          .map(({ node }) => (\n            <span key={node.id}>\n              <Link\n                to={node.relativePath.split(\"/\")[1]}\n                css={css`\n                  padding: 0 2px;\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <span\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 4)};\n                  `}\n                >\n                  {node.relativePath.split(\"/\")[1]}\n                </span>\n              </Link>\n              &#160;\n            </span>\n          ))}\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport Years from \"../components/years\"\n\nconst Date = props => (\n  <div\n    style={{\n      fontSize: `8pt`,\n      color: `#333`,\n      margin: `0`,\n      paddingTop: `4px`,\n      marginBottom: `9px;`,\n    }}\n  >\n    {props.children}\n  </div>\n)\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const canonicalLink = `${data.site.siteMetadata.domain}${post.fields.slug}`\n  return (\n    <Layout>\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n        <link rel=\"canonical\" href={canonicalLink} />\n      </Helmet>\n      <div>\n        <h2>{post.frontmatter.title}</h2>\n        <Date>{post.frontmatter.date}</Date>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <Years />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        domain\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM Do, YYYY\")\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}