### Xen Summary
Xen manages virtual computer instances with hypervisors and paravirtualization. Unlike [[OpenVZ]] where containers share a kernel, Xen can host different kernels and even operating systems. Xen can run on [[Linux]], [[FreeBSD]], and [[NetBSD]] - among others; it can run an incredibly variety of guest operating systems, too.

### My Experience with Xen

I run several virtual private servers using Xen, and the experience has been very positive.

I recently installed [[Ubuntu]] on a Mac Mini and the experience was so wonderful, I might try using Ubuntu and another Mac Mini I have for my first Xen machine. Its pretty cool that Mac mini's have a [[CPU]] that supports Xen. Its important to note that Ubuntu does not include a dom0 capable kernel in their repositories, but apparently a dom0 capable kernel from [[debian]] can be used without any issues.

#### Debian
As of 2011, [[Debian]] Squeeze can run Xen 4.0, and I just installed a couple of Debian 6.0 + Xen servers; the results are **amazing**. I'm so looking forward to doing more of this, and expanding upon the platform.

#### Xen Tools
To create Xen images, I installed [http://www.labs.docunext.com/demo/doculabsappone/tools/dpkg/xen-tools.html xen-tools].

The only real "glitch" I ran into was the option of "--scsi"; for whatever reason it didn't work for Squeeze with me, so I omitted it and it worked fine.

#### OpenVZ
What really rocked about the above setup ([[Debian]] and Xen), is that I was able to install [[grub]] and a custom kernel - supporting [[OpenVZ]]!

#### HOWTO Debian Squeeze Xen Dom0 + Debian Squeeze OpenVZ DomU

Although I'd already performed the above setup twice, this past weekend I tried again and ran into a couple of road bumps specifically with the [[OpenVZ]] kernel, so it was obvious I had to write down some notes.

#### Install [[Debian]] Squeeze and Xen 4 following the Debian Wiki

#### When using Xen Tools to create a Debian Squeeze image, do not use the --scsi option:
  <pre>
  xen-create-image --hostname example --ip 192.168.8.46 --vcpus 2 --pygrub --dist squeeze
  </pre>

#### Edit /etc/xen/example.cfg changing xvda(1|2) to simply xvda and xvdb, like so:
<pre>
root        = '/dev/xvdb ro'
disk        = [
                  'phy:/dev/universe/twoxen-disk,xvdb,w',
                  'phy:/dev/universe/twoxen-swap,xvda,w',
              ]
</pre>
#### Start the vm, enter the console
<tt>xm enter example</tt>
#### Edit fstab to reflect the disks and partitions set in the dom0 cfg
#### Exit the console with ctrl-5, stop and start the vm
#### Install a new kernel and grub
<tt>apt-get install linux-image-2.6.32-5-openvz-amd64 grub</tt>

I get some errors and warnings, but they don't seem to be critical:

<pre>
/usr/sbin/grub-setup: warn: Attempting to install GRUB to a partitionless disk.  This is a BAD idea..
/usr/sbin/grub-setup: warn: Embedding is not possible.  GRUB can only be installed in this setup by using blocklists.  However, blocklists are UNRELIABLE and their use is discouraged..
Installation finished. No error reported.
/usr/sbin/grub-setup: warn: Attempting to install GRUB to a partitionless disk.  This is a BAD idea..
/usr/sbin/grub-setup: warn: Embedding is not possible.  GRUB can only be installed in this setup by using blocklists.  However, blocklists are UNRELIABLE and their use is discouraged..
Installation finished. No error reported.
Generating grub.cfg ...
Found linux image: /boot/vmlinuz-2.6.32-5-xen-amd64
Found initrd image: /boot/initrd.img-2.6.32-5-xen-amd64
Found linux image: /boot/vmlinuz-2.6.32-5-openvz-amd64
Found initrd image: /boot/initrd.img-2.6.32-5-openvz-amd64
[  257.304942] SGI XFS with ACLs, security attributes, realtime, large block/inode numbers, no debug enabled
[  257.306663] SGI XFS Quota Management subsystem
[  257.357368] JFS: nTxBlock = 8192, nTxLock = 65536
[  257.421517] NTFS driver 2.1.29 [Flags: R/W MODULE].
[  257.487220] QNX4 filesystem 0.2.3 registered.
[  257.563727] Btrfs loaded
done
Setting up grub (0.97-64) ...
Setting up dmsetup (2:1.02.48-5) ...
update-initramfs: deferring update (trigger activated)
Processing triggers for initramfs-tools ...
update-initramfs: Generating /boot/initrd.img-2.6.32-5-xen-amd64
</pre>

#### Edit /boot/grub/menu.lst
I edited mine to look like this:

<pre class="terminal">
title           Debian GNU/Linux 6.0
root            (hd0,0)
kernel          /boot/vmlinuz-2.6.32-5-openvz-amd64 root=/dev/xvdb ro
initrd          /boot/initrd.img-2.6.32-5-openvz-amd64

</pre>

#### Reboot and Check uname
<pre class="terminal">
# uname -a
Linux example 2.6.32-5-openvz-amd64 #1 SMP Mon Mar 7 22:25:57 UTC 2011 x86_64 GNU/Linux
</pre>

Sweet.

#### NetBSD
I've tried, and although I was not yet successful, I'm still very interested in setting up a [[NetBSD]] Xen machine.