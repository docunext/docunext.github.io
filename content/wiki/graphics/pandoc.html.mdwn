This is a [[haskell]] program which converts documents from one format to another. It can transform a [[Markdown]] document directly to [[PDF]] (Markdown2pdf!).

I believe that Pandoc relies on [[Tex]]. I'd briefly tried to extend the process a little to include a letterhead, but didn't get too far.

### Markdown2pdf
#### [[LaTex]] Header
This is the header I'm using with Markdown2pdf now:
<pre class="sh_latex">
\documentclass{article}
% margins
\usepackage[left=1in,top=1in,right=1in,nohead,nofoot]{geometry}
\usepackage[utf8x]{inputenc}
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
% no page numbering
\pagestyle{empty}
\usepackage{times}
</pre>

I use it like this:
<pre class="sh_sh">
markdown2pdf  --custom-header=myheader somemarkdownfile.md
</pre>

#### Size of [[PDF]] File
I've been running these steps as well to reduce the file size of the resulting [[PDF]]:
<pre class="sh_sh">
pdftops somemarkdownfile.pdf
ps2pdf -dCompatibilityLevel=1.3 -sPAPERSIZE=letter somemarkdownfile.ps
</pre>

I tried LOTS of different options, but simply converting the pdf to ps and back again had the biggest effect, followed by the use of version 1.3.

Even this didn't make it any smaller:
<pre class="sh_sh">
ps2pdf -dCompatibilityLevel=1.3 -sColorConversionStrategy=Gray -sColorConversionStrategy=Mono -dProcessColorModel=/DeviceGray -dEmbedAllFonts=true -dPDFSETTINGS=/screen -dLZWEncodePages=true -dUseFlateCompression=true -sPAPERSIZE=letter somemarkdownfile.ps
</pre>

Omitting fonts does reduce filesize, but in my experience at the cost of readability.

### Related Pages
* [[Haskell]]
* [[Markdown]]
* [[Tex]]

