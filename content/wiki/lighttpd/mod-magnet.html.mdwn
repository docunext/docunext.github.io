[[Lighttpd]] has a url rewriting module which can use [[lua]] [[tinycdb]] to modify requests. Very cool! In some ways it reminds me of [[mysql-proxy]].

### Basic Example
I setup a very simple example using mod_magnet, [[Lua]], and [[cdb]].

In /etc/lighttpd/lighttpd.conf:
<pre class="sh_sh">
$HTTP["url"] =~ "^/barf" {
    magnet.attract-physical-path-to = ( "/etc/lighttpd/testing.lua" )
}
</pre>

/etc/lighttpd/testing.lua:
<pre class="sh_sh">
cdb = require("cdb")

maker = assert(cdb.make("/tmp/example.cdb", "/tmp/example.cdb.tmp"))

maker:add("key", "http://www.example.com/")
assert(maker:finish())

db = cdb.open("/tmp/example.cdb")

local var2 = db:get("key")

--print(var2)

--db:close()

lighty.header["Location"] = var2
return 301
</pre>

### Another Mod Magnet Example

[[Lua]] is still woefully lacking in the libraries department (at least in [[Debian]]), but there is a [[JSON]] parser available. While not in the repositories yet, the [[luamemcached]] project has [[debian]] packages, and there is an RFP for it.

Still, to stick with the existing packages, I chose [[JSON]]!

<pre class="sh_sh">
json = require("json")

if (nil == _G["rewrites"]) then
  fp = lighty.req_env['JSON_FILE']
  local f = assert(io.open(fp))
  local data = f:read('*a')
  f:close()
  _G["rewrites"] = json.decode(data)
  print("loading...")
else
  print("loaded!")
end

myhost = lighty.request["Host"]

if (_G["rewrites"][myhost]) then
  lighty.header["Location"] = "http://www." .. _G["rewrites"][myhost]
  return 301
end
</pre>

I don't really "get it", but the _G is a persistent global variable.

### See Also
* [[Lua]]
* [[Lighttpd]]

### Links
* [http://www.docunext.com/blog/2009/07/the-magic-of-mod-rewrite-and-rewritemap-and-alternatives.html The Magic of mod_rewrite and RewriteMap, and Alternatives]

