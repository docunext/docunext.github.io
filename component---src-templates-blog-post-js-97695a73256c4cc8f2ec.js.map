{"version":3,"sources":["webpack:///./src/components/years.js","webpack:///./src/templates/blog-post.js"],"names":["query","let","year","render","data","allDirectory","edges","map","node","key","id","to","relativePath","split","style","padding","textDecoration","color","Date","props","fontSize","margin","paddingTop","marginBottom","children","post","markdownRemark","canonicalLink","site","siteMetadata","domain","fields","slug","frontmatter","title","rel","href","date","dangerouslySetInnerHTML","__html","html"],"mappings":"2FAAA,qCAEe,sBACb,kBAAC,IAAD,CACEA,MAAK,YAeLC,KAAG,EACHC,MAAI,EACJC,OAAQ,SAACC,GAAD,OACN,6BACE,kDACCA,EAAKC,aAAaC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC3B,0BAAMC,IAAKD,EAAKE,IACd,kBAAC,IAAD,CACEC,GAAIH,EAAKI,aAAaC,MAAM,SAAS,GAAK,IAC1CC,MAAO,CACLC,QAAQ,QACRC,eAAe,OACfC,MAAM,YAGR,8BAAOT,EAAKI,aAAaC,MAAM,KAAK,KATxC,c,kCCzBV,0GAMMK,EAAO,SAACC,GAAD,OACX,yBACEL,MAAO,CACLM,SAAS,MACTH,MAAM,OACNI,OAAO,IACPC,WAAW,MACXC,aAAa,SAGdJ,EAAMK,WAII,sBAAe,IAAZpB,EAAW,EAAXA,KACVqB,EAAOrB,EAAKsB,eACZC,EAAa,GAAMvB,EAAKwB,KAAKC,aAAaC,OAASL,EAAKM,OAAOC,KACrE,OACE,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,+BAAQP,EAAKQ,YAAYC,OACzB,0BAAMC,IAAI,YAAYC,KAAMT,KAE9B,6BACE,4BAAKF,EAAKQ,YAAYC,OACtB,kBAAChB,EAAD,KAAOO,EAAKQ,YAAYI,MACxB,yBAAKC,wBAAyB,CAAEC,OAAQd,EAAKe,QAC7C,kBAAC,IAAD,SAMD,IAAMxC,EAAK","file":"component---src-templates-blog-post-js-97695a73256c4cc8f2ec.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDirectory(\n          filter: { relativePath: { regex: \"//20..$/\" } }\n          sort: { fields: name }\n        ) {\n          edges {\n            node {\n              id\n              relativePath\n            }\n          }\n        }\n      }\n    `}\n    let\n    year\n    render={(data) => (\n      <div>\n        <span>Yearly Indexes: </span>\n        {data.allDirectory.edges.map(({ node }) => (\n          <span key={node.id}>\n            <Link\n              to={node.relativePath.split(\"pages\")[1] + \"/\"}\n              style={{\n                padding: `0 2px`,\n                textDecoration: `none`,\n                color: `inherit`,\n              }}\n            >\n              <span>{node.relativePath.split(\"/\")[1]}</span>\n            </Link>\n            &#160;\n          </span>\n        ))}\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport Years from \"../components/years\"\n\nconst Date = (props) => (\n  <div\n    style={{\n      fontSize: `8pt`,\n      color: `#333`,\n      margin: `0`,\n      paddingTop: `4px`,\n      marginBottom: `9px;`,\n    }}\n  >\n    {props.children}\n  </div>\n)\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const canonicalLink = `${data.site.siteMetadata.domain}${post.fields.slug}`\n  return (\n    <Layout>\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n        <link rel=\"canonical\" href={canonicalLink} />\n      </Helmet>\n      <div>\n        <h2>{post.frontmatter.title}</h2>\n        <Date>{post.frontmatter.date}</Date>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <Years />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        domain\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM Do, YYYY\")\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}