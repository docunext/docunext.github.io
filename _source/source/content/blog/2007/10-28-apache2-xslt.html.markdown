---
title: Apache2 XSLT
comments:
  - author: niq
    email: niq@apache.org
    ip: 80.229.52.226
    url: http://bahumbug.wordpress.com
    date: 11/01/2007 10:57:39 AM
    text: >
      Apache nowadays is an applications platform, and there are many good reasons to prefer a filter module (which works with any data source) over PHP - which doesn't.  Quite apart from the overhead of having PHP installed at all!<br/><br/>As for producing that boilerplate ... that's a new one on me.  You could use mod_transform for XSLT and XInclude instead.  Or for much faster XML processing, one of the range of SAX-based filters.
  - author: admin
    email: albert.lash@savonix.com
    ip: 74.94.149.33
    url:
    date: 11/01/2007 11:06:28 AM
    text: >
      Hi niq!! Thanks for stopping by and commenting!<br/><br/>I'll definitely review mod_transform, XInclude, and the SAX-based filters, those are all new to me.<br/><br/>I'm a little familiar with filters - when you say a filter module are you referring ExtFilterDefine, and stuff like that?
  - author: admin
    email: albert.lash@savonix.com
    ip: 74.94.149.33
    url:
    date: 11/01/2007 11:16:42 AM
    text: >
      Interesting, both Xerces and Xalan look pretty cool for C++ XML and XSLT processing. I'm installing them now from debian lenny, and thinking it might be possible to use them as external filters via apache2...<br/><br/>If I can't get that to work, I'll try out mod_include, looks easy enough to compile, but too bad its not in debian. :-(
  - author: grig
    email: grig@deviurg.com
    ip: 78.37.16.113
    url: http://sourceforge.net/projects/xslt-filter/
    date: 05/05/2008 01:11:36 PM
    text: >
      Albert, check this module <a href="http://sourceforge.net/projects/xslt-filter/" rel="nofollow">http://sourceforge.net/projects/xslt-filter/</a><br/>It was written about one year ago as a "View" part for several Mod_perl based projects. The dynamic tranformation on the fly is the main goal. Today the module is used in a mixed envirenments - PHP/Mod_perl/static files.
  - author: Albert
    email: albert.lash@savonix.com
    ip: 75.69.165.231
    url:
    date: 05/05/2008 03:19:55 PM
    text: >
      Hi Grig, Thanks for the heads up! It looks terrific, I'll try it out and post how it works for me. :-)
date: 2007-10-28
---
<a href="http://www.docunext.com/blog/2007/10/28/apache2-xslt/">

I'm trying out the libapache2-modxslt module which is written in c an provides the ability to parse XML. :-)

I just installed it on an ubuntu machine and am going to follow their instructions when trying it out for the first time.

<pre>
sudo apt-get install libapache2-modxslt

sudo a2enmod modxslt</pre>

I had difficulty with their documentation, but I was able to figure out the basics. Here's what I used in my config:

<pre class="xml">    <Directory /var/www/public/xslt>        Order deny,allow        Deny from all        Allow from 192.168        SetOutputFilter mod-xslt        AddType text/xml .xml        XSLTSetStylesheet text/xml /var/www/public/test.xsl    </Directory></pre>

test.xml

<pre class="xml"><?xml version="1.0"?><top>    <a>blah</a></top></pre>

test.xsl

<pre class="xml"><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:output method="html" indent="yes" encoding="UTF-8" omit-xml-declaration="no"

doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN"

doctype-system="http://www.w3.org/TR/html4/loose.dtd"/><xsl:template match="/"><html><head>     <title>XSLT Test</title></head><body><div id="container"><xsl:value-of select="//a"/></div></body></html></xsl:template></xsl:stylesheet></pre>

In my test, Apache cached the XSL file even though a reboot and modification time change. Hmmm.

Also, documents produced by modxslt generate this comment at the end of the document which is pretty cheesy:

<pre><!--  -* Generated by mod-xslt 1.3.9; http://www.mod-xslt2.com/  -* Copyright (C) 2002,2003 Carlo Contavalli - <ccontavalli at masobit.net>  -* derived from work by Philipp Dunkel and others (http://www.mod-xslt2.com/main/credits.xml)  -* Thanks to http://www.masobit.net/ for paying me while working on mod-xslt  -* and for providing resources to the project. --></pre>

That copyright message has no business being in a resulting document created by someone else. I'm surprised that Debian let something like that slip through. Blah.

I was just sifting through the code and found this:

<a href="http://www.mod-xslt2.com/doc/faq.xml?question=7&sect=1">http://www.mod-xslt2.com/doc/faq.xml?question=7&sect=1</a>

That is even lamer that they are aware that people don't want it there but make it difficult to remove. Shame shame. At least its GPL so someone (me?) can fork it and remove that lameness.

<a href="http://www.dpbolvw.net/click-2289622-10440259" target="_top" rel="nofollow">

<img src="http://www.lduhtrp.net/image-2289622-10440259" width="468" height="60" alt="Once You Know, You Newegg" border="0"/></a>

After going through this, I frankly don't see the point of such a module anyway. If you are going to have XML and XSL docs transformed on the server, might as well render them to the desired static output. If you are going to do dynamic transformations based upon user input, why not use PHP? Apache isn't designed to handle complex logic, so if you pass that off to something like PHP, why not do the same with the transformations? Also, I think with javascript libs iike sarissa and goog-ajaxslt, offloading the transformations to client browsers will get much easier. For simple stuff, most modern browsers can do the XSL transformations themselves.

In my humble opinion, it would make more sense to have Apache test for browser user agents, and pre-render the content when serving requests to older browsers.

Â¥

