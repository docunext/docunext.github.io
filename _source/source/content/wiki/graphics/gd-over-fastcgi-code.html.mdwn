### The Code
I'll setup a [[Subversion]] repository for this eventually.
<pre>
/*
Copyright: Savonix Corporation, 2009
Author:    Albert Lash
License:   MIT / BSD / GPL2 (all available, you choose one you like)
*/

#include <fcgi_stdio.h>
#include <fcgiapp.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include "gd.h"
#include "gdfontt.h"
#include "gdfonts.h"
#include "gdfontmb.h"
#include "gdfontl.h"
#include "gdfontg.h"

#define MAX(x,y) ((x) > (y) ? (x) : (y))
#define MIN(x,y) ((x) < (y) ? (x) : (y))

#define MAX4(x,y,z,w) \
	((MAX((x),(y))) > (MAX((z),(w))) ? (MAX((x),(y))) : (MAX((z),(w))))
#define MIN4(x,y,z,w) \
	((MIN((x),(y))) < (MIN((z),(w))) ? (MIN((x),(y))) : (MIN((z),(w))))

#define MAXX(x) MAX4(x[0],x[2],x[4],x[6])
#define MINX(x) MIN4(x[0],x[2],x[4],x[6])
#define MAXY(x) MAX4(x[1],x[3],x[5],x[7])
#define MINY(x) MIN4(x[1],x[3],x[5],x[7])

int
main (int argc, char **argv)
{

    /* Input and output files */
    int fontsize = 20;
    char *err;
    int brect[8];
    int sx, sy;

    /* Output images */
    gdImagePtr im_out = 0;

    while (FCGI_Accept() >= 0)   {

        char *f  = getenv("TTF_FONT");
        char *s  = getenv("TEXT_STRING");
        char *sz = getenv("FONT_SIZE");

        fontsize = atoi(sz);

        /* obtain brect so that we can size the image */
        err
            gdImageStringFT ((gdImagePtr) NULL, &brect[0], 0, f, fontsize, 0, 0, 0, s);
            if (err)
            {
                fprintf (stderr, err);
                return 1;
            }

        sx = MAXX (brect) - MINX (brect);
        sy = MAXY (brect) - MINY (brect);

        /* Color indexes */
        int black, trans_color;

        im_out = gdImageCreateTrueColor (sx, sy);
        gdImageSaveAlpha(im_out,1);
        trans_color = gdImageColorAllocateAlpha(im_out, 0, 0, 0, 127);
        gdImageFill(im_out,0,0,trans_color);
        black = gdImageColorAllocate (im_out, 0, 0, 0);
        gdImageStringFT (im_out, NULL, black, f, fontsize, 0, 0, fontsize, s);

        printf("Content-type: image/png\r\n\r\n");
        int size;
        /* tEXt${keyword}\x00${text}\x00\x00\x00\x00$data */
        /* use libpng to write text into image */
        char* data = (char*)gdImagePngPtrEx(im_out, &size,9);
        fwrite(data, sizeof(char), size, stdout);
        gdImageDestroy (im_out);
        gdFree(data);
    }
    return 0;
}
</pre>

### Related Pages
* [[GD over FastCGI]]
* [[PIR]]
* [[FastCGI]]
* [[C]]