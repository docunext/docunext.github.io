### Monit Summary
Monit can be used for monitoring, and potentially restarting, computer processes. Like [[Nagios]], it can also send out alerts if a program requires a restart.

### Monit Configuration
On [[Debian]], the monit configuration file is in /etc/monit/monitrc.

#### Monit Version 4
This might work with monit version 4:
<pre class="sh_sh">
check process varnish with pidfile /var/run/varnishd.pid
  start program = "/etc/init.d/varnish start"
  stop program = "/etc/init.d/varnish stop"
  if cpu > 60% for 2 cycles then alert
  if cpu > 80% for 5 cycles then restart
  if totalmem > 200.0 MB for 5 cycles then restart
  if children > 250 then restart
  if loadavg(5min) greater than 10 for 8 cycles then stop
  if failed host www.example.com port 80 protocol http
    then restart
</pre>

I've had problems with monit and [[Varnish]] and [[NGINX]] proxied [[Web Servers]] if the host header is not set. Instead of 127.0.0.1, I set a hostname and then use a /etc/hosts to point it to 127.0.0.1. I'm not crazy about that solution, but it should be OK for now.

#### Monit Version 5
Version 5 of monit apparently has some added syntax and logic to support more sophisticated checks. For example, this configuration helps deal with hostname and IP address issues on [[web servers]] like [[NGINX]] that want a domain name and a valid request:

<pre class="sh_c">
check process nginx with pidfile /var/run/nginx.pid
  start program = "/etc/init.d/nginx start"
  stop program  = "/etc/init.d/nginx stop"
  check host nginxcheckone with address 192.168.8.2
    if failed
      url http://localhost/example.html for 1 cycle
    then alert
  check host nginxchecktwo with address 192.168.8.2
    if failed
      url http://localhost/example.html for 2 cycles
    then restart
  if 5 restarts within 5 cycles then timeout
</pre>

#### Logging
I like to have monit log to its own file:
<pre>
set logfile /var/log/monit.log
</pre>

### See Also
* [[Nagios]]
* [[Monitoring]]
* [[High Availability]]

