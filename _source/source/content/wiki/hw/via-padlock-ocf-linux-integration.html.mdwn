I've been trying to get the cryptoapi hook into the padlock-aes driver, but can't seem to get it to work. I get acceleration when I use the padlock engine in openssl, but not when using the cryptodev engine. Hmmm.

### Cryptotest
When using the cryptotest tool, I do see a big increase in aes performance:

#### With padlock-aes loaded:
<pre>
root@evrx-10:/usr/src/crypto-tools# modprobe padlock-aes
root@evrx-10:/usr/src/crypto-tools# ./cryptotest -a aes 256 8192
   0.031 sec,     512    aes crypts,    8192 bytes, 134303682 byte/sec,  1024.7 Mb/sec
</pre>

#### Without padlock-aes:
<pre>
root@evrx-10:/usr/src/crypto-tools# rmmod padlock-aes
root@evrx-10:/usr/src/crypto-tools# ./cryptotest -a aes 256 8192
   0.613 sec,     512    aes crypts,    8192 bytes,  6846211 byte/sec,    52.2 Mb/sec
</pre>

### OpenSSL

#### With padlock engine:
<pre>
root@evrx-10:/usr/src# /usr/local/ssl/bin/openssl speed -evp aes128 -elapsed -engine padlock
engine "padlock" set.
You have chosen to measure elapsed time instead of user CPU time.
To get the most accurate results, try to run this
program when this computer is idle.
Doing aes-128-cbc for 3s on 16 size blocks: 12480176 aes-128-cbc's in 3.01s
Doing aes-128-cbc for 3s on 64 size blocks: 11935354 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 256 size blocks: 6969755 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 1024 size blocks: 2603061 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 2048 size blocks: 1418747 aes-128-cbc's in 3.00s
OpenSSL 0.9.8e 23 Feb 2007
built on: Wed Sep 26 00:35:55 EDT 2007
options:bn(64,32) md2(int) rc4(idx,int) des(ptr,risc1,16,long) aes(partial) idea(int) blowfish(idx)
compiler: gcc -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DHAVE_CRYPTODEV -DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -Wall -DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DSHA1_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM
available timing options: TIMES TIMEB HZ=100 [sysconf value]
timing function used: ftime
The 'numbers' are in 1000s of bytes per second processed.
type             16 bytes     64 bytes    256 bytes   1024 bytes   2048 bytes
aes-128-cbc      66383.91k   254281.84k   593960.48k   887328.38k   967241.63k
</pre>

#### With cryptodev engine:
<pre>
root@evrx-10:/usr/src# /usr/local/ssl/bin/openssl speed -evp aes128 -elapsed -engine cryptodev
engine "cryptodev" set.
You have chosen to measure elapsed time instead of user CPU time.
To get the most accurate results, try to run this
program when this computer is idle.
Doing aes-128-cbc for 3s on 16 size blocks: 710505 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 64 size blocks: 511654 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 256 size blocks: 186004 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 1024 size blocks: 52500 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 2048 size blocks: 26833 aes-128-cbc's in 3.00s
OpenSSL 0.9.8e 23 Feb 2007
built on: Wed Sep 26 00:35:55 EDT 2007
options:bn(64,32) md2(int) rc4(idx,int) des(ptr,risc1,16,long) aes(partial) idea(int) blowfish(idx)
compiler: gcc -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DHAVE_CRYPTODEV -DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -Wall -DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DSHA1_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM
available timing options: TIMES TIMEB HZ=100 [sysconf value]
timing function used: ftime
The 'numbers' are in 1000s of bytes per second processed.
type             16 bytes     64 bytes    256 bytes   1024 bytes   2048 bytes
aes-128-cbc       3784.31k    10900.75k    15851.21k    17896.14k    18293.60k
</pre>

AGAIN! When I was compiling cryptotest, I noticed that I was missing the cryptodev.h header  in /usr/include/crypto, so I copied it there and recompiled openssl. Then I rmmod the aes module, and modprobe padlock-aes. Much better, but still much faster to use the padlock engine directly.

#### With padlock engine #2:
<pre>
root@evrx-10:/usr/src/openssl-0.9.8e# /usr/local/ssl/bin/openssl speed -evp aes128 -elapsed -engine padlock
engine "padlock" set.
You have chosen to measure elapsed time instead of user CPU time.
To get the most accurate results, try to run this
program when this computer is idle.
Doing aes-128-cbc for 3s on 16 size blocks: 11089572 aes-128-cbc's in 3.01s
Doing aes-128-cbc for 3s on 64 size blocks: 11937206 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 256 size blocks: 6967659 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 1024 size blocks: 2603238 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 2048 size blocks: 1418773 aes-128-cbc's in 3.00s
OpenSSL 0.9.8e 23 Feb 2007
built on: Wed Sep 26 11:33:22 EDT 2007
options:bn(64,32) md2(int) rc4(idx,int) des(ptr,risc1,16,long) aes(partial) idea(int) blowfish(idx)
compiler: gcc -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DHAVE_CRYPTODEV -DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -Wall -DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DSHA1_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM
available timing options: TIMES TIMEB HZ=100 [sysconf value]
timing function used: ftime
The 'numbers' are in 1000s of bytes per second processed.
type             16 bytes     64 bytes    256 bytes   1024 bytes   2048 bytes
aes-128-cbc      59026.33k   254321.30k   593781.86k   887388.72k   967259.36k
</pre>

#### With cryptodev engine #2 and padlock-aes loaded:
<pre>
root@evrx-10:/usr/src/openssl-0.9.8e# /usr/local/ssl/bin/openssl speed -evp aes128 -elapsed -engine cryptodev
engine "cryptodev" set.
You have chosen to measure elapsed time instead of user CPU time.
To get the most accurate results, try to run this
program when this computer is idle.
Doing aes-128-cbc for 3s on 16 size blocks: 964941 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 64 size blocks: 1151602 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 256 size blocks: 1028416 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 1024 size blocks: 720005 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 2048 size blocks: 516282 aes-128-cbc's in 3.00s
OpenSSL 0.9.8e 23 Feb 2007
built on: Wed Sep 26 11:33:22 EDT 2007
options:bn(64,32) md2(int) rc4(idx,int) des(ptr,risc1,16,long) aes(partial) idea(int) blowfish(idx)
compiler: gcc -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DHAVE_CRYPTODEV -DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -Wall -DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DSHA1_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM
available timing options: TIMES TIMEB HZ=100 [sysconf value]
timing function used: ftime
The 'numbers' are in 1000s of bytes per second processed.
type             16 bytes     64 bytes    256 bytes   1024 bytes   2048 bytes
aes-128-cbc       5137.79k    24534.80k    87641.31k   245434.46k   351979.21k
</pre>

#### With cryptodev engine #2 and aes loaded:
<pre>
root@evrx-10:/usr/src/openssl-0.9.8e# rmmod padlock-aes
root@evrx-10:/usr/src/openssl-0.9.8e# modprobe aes
root@evrx-10:/usr/src/openssl-0.9.8e# /usr/local/ssl/bin/openssl speed -evp aes128 -elapsed -engine cryptodev
engine "cryptodev" set.
You have chosen to measure elapsed time instead of user CPU time.
To get the most accurate results, try to run this
program when this computer is idle.
Doing aes-128-cbc for 3s on 16 size blocks: 820816 aes-128-cbc's in 3.01s
Doing aes-128-cbc for 3s on 64 size blocks: 508784 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 256 size blocks: 185761 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 1024 size blocks: 52495 aes-128-cbc's in 3.00s
Doing aes-128-cbc for 3s on 2048 size blocks: 26824 aes-128-cbc's in 3.00s
OpenSSL 0.9.8e 23 Feb 2007
built on: Wed Sep 26 11:33:22 EDT 2007
options:bn(64,32) md2(int) rc4(idx,int) des(ptr,risc1,16,long) aes(partial) idea(int) blowfish(idx)
compiler: gcc -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DHAVE_CRYPTODEV -DL_ENDIAN -DTERMIO -O3 -fomit-frame-pointer -Wall -DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DSHA1_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM
available timing options: TIMES TIMEB HZ=100 [sysconf value]
timing function used: ftime
The 'numbers' are in 1000s of bytes per second processed.
type             16 bytes     64 bytes    256 bytes   1024 bytes   2048 bytes
aes-128-cbc       4368.95k    10839.61k    15830.50k    17894.43k    18287.47k
</pre>

Wow. As mentioned on Michal Ludvig's site, you can alias the aes module to instead load the padlock-aes module. Cool!

### See Also
* [[Security]]
* [[My Notes on Patching 2.6.22 with OCF]]

### Links
* https://www.grounation.org/index.php?2008/07/02/6-via-c7-padlock-on-debian-etch

