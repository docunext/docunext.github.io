Vim is "vi" improved. While a little tough to learn initially, vim is a very useful text editor.

* vim [file name] - begins a new vim command screen
* o - opens the insert mode on a new line from the previous one
* i - opens the insert mode on the last line with text
* esc - closes the insert mode
* :w - writes the changes made
* :q quits out of vim

### Advanced Usage
#### How to select a block of text with Vim and then change the indent

1. Press 'V' to start the visual selection
2. Use &lt; and &gt; to change the indent

### The Configuration Extras I use
<pre>
set softtabstop=4
set shiftwidth=4
set tabstop=4
set expandtab
set noai
</pre>

### Plugins
I put "filetype plugin on" in my ~/.vimrc file.

#### XML Editing
Finally found a simple tag completion script:
* [http://www.vim.org/scripts/script.php?script_id=13 XML tag completion in Vim]
I change the mappings for tag closings like this:
<pre class="sh_sh">
inoremap </ <C-R>=GetCloseTag()<CR>
map <C-z> a<C-_><ESC>
</pre>

This is an interesting plugin, but I found it caused some problems when I would paste items in. Turns out a bunch of extensions and scripts in Vim have problems with pasting, so there is a "paste" mode which disables some of them. Sweet! I'm trying out this plugin again.

* http://github.com/docunext/closetag.vim

#### NERD Tree
A nice file system browser!




Took me a minute to figure out how to navigate my cursor from one panel the the next, its ctrl-w ctrl-w; and to close a split panel, its ctrl-w q.

#### Starting NERDTree Automatically

Put this in my .vimrc:

<pre class="sh_sh">
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
</pre>

#### Opening Files Within the Tree

This is very helpful - its *almost* like [[textmate]]:

<pre class="sh_sh">
" Find file in current directory and edit it.
function! Find(name)
  let l:list=system("find . -name '".a:name."' | perl -ne 'print \"$.\\t$_\"'")
  let l:num=strlen(substitute(l:list, "[^\n]", "", "g"))
  if l:num < 1
    echo "'".a:name."' not found"
    return
  endif
  if l:num != 1
    echo l:list
    let l:input=input("Which ? (CR=nothing)\n")
    if strlen(l:input)==0
      return
    endif
    if strlen(substitute(l:input, "[0-9]", "", "g"))>0
      echo "Not a number"
      return
    endif
    if l:input<1 || l:input>l:num
      echo "Out of range"
      return
    endif
    let l:line=matchstr("\n".l:list, "\n".l:input."\t[^\n]*")
  else
    let l:line=l:list
  endif
  let l:line=substitute(l:line, "^[^\t]*\t./", "", "")
  execute ":e ".l:line
endfunction
command! -nargs=1 Find :call Find("<args>")
</pre>

### Vim Tips

#### Convert to Lowercase

<pre>
:%s/[A-Z]/\L&/g
</pre>
