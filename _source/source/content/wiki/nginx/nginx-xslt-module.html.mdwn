### Summary
This module is an amazing implementation of [[XSL]] processing. I've had several years of experience of working with these technologies, and this one is my favorite.

I'm hoping to sometime learn more of [[C]] and [[NGINX]] modules so that I can extend this module.

### Last Modified
Its interesting to note that when processing an XML file using the XSLT module, NGINX does not send a last modified header. However, if the browser sends a if-modified-since request header, nginx checks to see if the source XML file has been modified. If it hasn't, NGINX sends a 304 response. This is interesting to me.

More specifically, if my NGINX configuration includes:

<pre>
    location /testing-xsl-files/ {
        root /var/www/public/s/xml/;
        rewrite . /empty.xml break;
        xslt_stylesheet /var/www/public/s/xsl/text_output.xsl;
    }
</pre>

Responses to requests to that path do not get a last-modified header.

XSL Headers:
<pre>
HTTP/1.x 200 OK
Server: nginx/0.7.55
Date: Mon, 23 Nov 2009 03:30:22 GMT
Content-Type: text/html
Content-Length: 5
Connection: keep-alive
Accept-Ranges: bytes
</pre>

And with this configuration:
<pre>
    location /testing-xml/ {
        root /var/www/public/s/xml/;
        rewrite . /empty.xml break;
    }
</pre>

Responses to requests to that path get a last-modified header.

Static XML Headers:
<pre>
HTTP/1.x 200 OK
Server: nginx/0.7.55
Date: Mon, 23 Nov 2009 03:31:25 GMT
Content-Type: text/xml
Content-Length: 14
Last-Modified: Mon, 23 Nov 2009 03:24:29 GMT
Connection: keep-alive
Accept-Ranges: bytes
</pre>

What's even more interesting, is that NGINX will pass through Last-Modified headers in the same location with an xslt_stylesheet directive, so this combination works fine:

<pre>
    location /testing-xsl-files/ {
        root /var/www/public/s/xml/;
        rewrite . /empty.xml break;
        xslt_stylesheet /var/www/public/s/xsl/text_output.xsl;
    }
    location /testing-xsl-proxy/ {
        proxy_pass  http://127.0.0.1:88/testing-xml/;
        xslt_stylesheet /var/www/public/s/xsl/text_output.xsl;
    }
    location /testing-xml/ {
        root /var/www/public/s/xml/;
        rewrite . /empty.xml break;
    }
</pre>

