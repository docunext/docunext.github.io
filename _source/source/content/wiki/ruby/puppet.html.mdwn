### Summary
Puppet is a tool to automate repetitive systems administration tasks. It is written in [[Ruby]].

I finally gave this a shot - it reminds me a bit like [[csync2]]. I followed these tutorials:
* http://www.debian-administration.org/articles/526
* http://reductivelabs.com/trac/puppet/wiki/AdvancedPuppetRecipe

Looks really nice actually. Yes - very very nice. This is one of those programs I regret not diving into earlier! That deserves a new page in fact: [[Software I Wish I Started Using Earlier]]!

### Puppetmaster

The puppetmaster serves many purposes, including: storing configurations, managing certificates, etc.

#### Certificates
When a puppet requests its configuration, the puppetmaster will wait until the sysadmin accepts their certificate.

#### View Certificate Requests
To view the list of certificate requests, I use this command:

<pre class="terminal">
puppetca --list
</pre>

#### Sign Certificates
To sign a certificate, I use the following command:

<pre class="terminal">
puppetca --sign client.example.com
</pre>

#### Clear Certificate Requests
To clear requests, I use this command:

<pre class="terminal">
puppetca --clean client2.example.com
</pre>

### Puppet Manifests
At my current perspective, I get the feeling that Puppet is all about manifests. I like this, as I'm familiar with the idea from [[Gentoo]], [[PEAR]], and [[FreeBSD]].

Manifests look like little scripts with arrays and classes (maybe more) in them. For example (from [http://reductivelabs.com/trac/puppet/wiki/AdvancedPuppetRecipe *]):
<pre>
# /etc/puppet/manifests/site.pp

import "classes/*"

node default {
    include sudo
}
</pre>

### Puppet Modules
This is a point strongly reinforce in the Advanced Puppet Recipe. Still figuring it out. Maybe like [[Perl]] modules?

### Puppet Nodes
I believe that these are the computers/systems/machines which are managed by the puppetmaster.

#### External Nodes Script
An external node script enables puppet to retrieve node configuration data as the result of a script. The script must return [[YAML]]. This idea interests me, but in reading about it I've come to realize that variables can be defined in the scope of a node. In that case, since I'm using [[YoDNSconf]] to build nodes.pp, I'll add node specific data there.

### Puppet Questions
It appears that on [[debian]], puppet and puppetmaster are daemons which continually run and periodically perform their duties, autonomously. Is there a way to do this manually, probably. I like to run the tasks manually to begin with.

#### File Changes
I just went through the advanced tutorial and created a module, and added a source file. The problem I have with this is that if I update the source file, and then restart puppet on the client, the target file on the client is not updated. If I remove the target file, then it is updated. Then if I update the source file, restart the puppet and puppetmaster, it still isn't updated. Huh? Maybe [http://reductivelabs.com/trac/puppet/wiki/LanguageTutorial#resources this] is the answer.

### Puppet Gotchas
#### Hostnames
I ran into a problem with hostnames:
<pre>
warning: Certificate validation failed; considering using the certname configuration option
</pre>
Just had to fix public and local hostname resolution (had same problem with [[csync2]]), and voila. I also had to purge /var/lib/puppet/ssl/* on the client and the server - just like csync2 (though csync2 uses [[SQLite]])!! :-)

#### nil into String
<pre>
puppetmasterd: Could not call: can't convert nil into String
</pre>
What's this all about? I think it was fixed by adding a "plugins" folder to my sudo module folder.

#### Certificates
<pre>
puppetd:  Did not receive certificate
</pre>
No clue yet... probably has something to do with hostnames.

<pre>
Allowing unauthenticated client dev-48-gl.example.com(192.168.8.48) access to puppetca.getcert
</pre>
Strange, puppetmasterd and puppetca have different ssl directories, as a troubleshooting suggestion [http://groups.google.com/group/puppet-users/browse_thread/thread/6a66dc177ce0ac83?pli=1 here] revealed.
<pre>
puppetmasterd --configprint ssldir
</pre>
<pre>
puppetca --configprint ssldir
</pre>
How can I fix this? By adding this to /etc/puppet/puppet.conf:
<pre>
[puppetca]
ssldir=/var/lib/puppet/ssl
</pre>

#### getaddrinfo
<pre>
Jan 18 15:16:43 exp-92-gl puppetd:  Could not find server puppet: getaddrinfo: Name or service not known
Jan 18 15:16:43 exp-92-gl puppetd:  (//Node[basenode]/sudo/File[sudoers]/source) change from {md5}8a5d79a43cd19a1b91fa78e0aaa76140 to puppet://dev-48-gl.savonix.com/sudo/sudoers failed: Could not find server puppet
</pre>

In the advanced example, the site.pp uses puppet as the filebucket server name, I changed it to my server:
<pre>
filebucket { main: server => "dev-48-gl.savonix.com" }
</pre>
The errors went away and the file now synchronized. Interesting.

#### More getaddrinfo Errors

<pre>
puppetd[461]: Could not request certificate: getaddrinfo: Name or service not known
</pre>

Hmmm...

#### Debugging on [[debian]]
The client puppet service starts automatically on [[debian]], so I stop it with:
<pre>
/etc/init.d/puppet stop
</pre>
and then manually run it with debug:
<pre>
puppetd --debug --server puppet.example.com
</pre>

#### Entropy
If my puppets runinterval is too frequent, my puppetmaster server runs out of entropy. To aid with this, I boost the runinterval=14400. I also run [[rng-tools]] on [[debian]]. (See [[Linux and entropy]]).

### Storeconfigs
I'm very curious about this, but the details are vague to say the least. What's the data model like? Looks like the details regarding exported resources are very much tied to storedconfigs.

I thought this might be able setting node specific variables for various hosts, but it instead appears to be about auto-sharing node specific data among hosts.

New page just for this: [[Puppet Stored Configuration]]

### Changing from One Puppet Server to Another
This is a turning out to be a bit of a challenge! Actually, it wasn't too difficult... though I was stumped for awhile because I hadn't worked with puppet in such a long while.

I finally remembered that it is sometimes necessary to purge the Puppet variables directory on both the client and the server:

<pre class="sh_sh">
rm -rf /var/lib/puppet
</pre>

This will necessitate re-signing all the client certificates, but in my situation I wanted to use a different certname than the server's hostname.

#### Could not request certificate: ===
<pre>
Could not request certificate: Retrieved certificate does not match private key; please remove certificate from server and regenerate it with the current key
</pre>

This one has me stumped... I removed the client cert from the server, but I still get this. Hmm, might have just needed a server restart, it works now.

### Pages
* [[Puppet Show]]
* [[Facter]]
* [[Ruby]]
* [[ERB]]
* [[Mongrel]] / [[NGINX]]
* [[WEBrick]]
* [[LDAP]]

### Links
#### General Info
* http://reductivelabs.com/projects/puppet/
* http://reductivelabs.com/trac/puppet/wiki/CompleteConfiguration
* http://reductivelabs.com/trac/puppet/wiki/LanguageTutorial#resources
* http://www.docunext.com/blog/2009/01/im-running-puppet.html
* http://fedoraproject.org/wiki/Infrastructure/Puppet

#### Positive Reviews
* http://log.onthebrink.de/2008/05/first-positive-experience-with-ruby.html

