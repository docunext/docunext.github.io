### RVM
RVM stands for [[Ruby]] version manager, and it makes dealing with different versions of Ruby breeze.

While I usually prefer to use packages, Ruby is currently volatile, and not getting along as well as it could with the filesystem hierarchy standard / [[Debian]] / [[Ubuntu]].

I've found RVM to make working with [[REE]], Ruby 1.9.2, and Ruby 1.8.7 together quite easy. It also makes [[Ruby Gems]] easier to deal with.

### rbenv
Rbenv is a new [[Ruby]] version manager from [[37 Signals]].

Apparently it has some advantages over RVM because it is less disruptive to the shell environment.

I haven't tried it, but I'm tempted to do so. The catch is that the two cannot co-exist... UPDATE! '''I'm now using rbenv exclusively.'''

#### [[CentOS]] Dependencies

I really like the idea of running minimal [[CentOS]] [[LXC]] containers, and I've just set one up for some projects I'm working on. I'm installing [[Ruby]] 1.9.2 on it with rbenv / ruby-build.

I had to install these packages (some are for gems):
<pre>
yum install gcc zlib-devel readline-devel sqlite-devel mysql-devel openssl-devel
yum install zlib-devel wget openssl-devel pcre pcre-devel make gcc gcc-c++ curl-devel
</pre>

Also, fwiw - in a [[CentOS]] container, there is no [[udev]] running. In that case, I have to manually run this for command completion (which rbenv includes):

<pre>
sudo ln -s /proc/self/fd /dev/fd
</pre>

### Switching from RVM to Rbenv

I have made the switch from RVM to Rbenv on an [[Ubuntu]] powered [[LXC]] container and ran into a couple of problems. I uninstalled the [[ruby]] version I had installed via RVM, then I imploded it. That didn't remove everything - I had to clean out a bunch of stuff from /usr/local.

### Links
* http://www.docunext.com/blog/2011/01/ruby-and-debian-ubuntu-is-fine-and-dandy.html
* http://www.docunext.com/blog/2011/08/execjsruntimeunavailable.html

