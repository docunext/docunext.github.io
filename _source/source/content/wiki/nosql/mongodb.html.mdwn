MongoDB is a [[NoSQL]] implementation of a document-focused storage system.

It is written in [[Cplusplus]] and supports [[JSON]] styled documents; internally the data is stored in BSON.

I'm surprised that it uses [[Spider Monkey]] instead of [[V8]]. UPDATE: From what I've read, MongoDB doesn't rely to heavily on [[Javascript]] internally, and I also just read that some [[V8]] integration is in the works: "Server-Side Javascript (V8 engine) is under development -- ask for details."

### [[Ruby]] Driver and Data Mappers
The [[Ruby]] MongoDB driver is super simple! I was up and running with it in no time at all. I've been tinkering around with it on [http://github.com/docunext/notasinatraapp notasinatraapp], and I have to say its pretty cool.

I have years of experience with [[SQL]], and a couple years of experience with key-value storage hashes like [[Memcached]], [[BDB]] and [[CDB]]. In my opinion, [[MongoDB]] fits nicely in the middle. And its not an awkward in-between! Thanks to gracious object oriented languages like [[Ruby]] (and increasingly [[Javascript]]), objects, hashes, and arrays are much easier for me to comprehend on a practical level.

Where do I see the practical application of [[MongoDB]]? Web publishing! Web applications to a certain degree as well, but more sophisticated web applications will most likely continue to require [[SQL]]-powered relational database management systems ([[RDBMS]]).

### MongoDB Files
* [[Default MongoDB Configuration on Debian]]

### MongoDB Command Line Interface and Queries

#### Search by "Primary Key"
<pre class="sh_javascript">
db.coll.find({"_id" : ObjectId("4ba028995aa9b4d2254d726a") });
</pre>

#### Search within Nested Fields
Querying fields within [[JSON]] objects (this example is written in [[Ruby]]):

<pre class="sh_ruby">
result = @coll.find({:"oject.parent.child" => /regext-search-string/ }).first
result.to_json
</pre>

This uses "dot notation".

#### Search Exclusions

Version 1.3.3+ MongoDB servers have the ability to exclude:

<pre class="sh_ruby">
result = @coll.find({'name' => { "$not" => /Various.*/i }}).first
result.to_json
</pre>

#### Indexes
From the mongo command line:
<pre class="sh_javascript">
db.coll.getIndexes()
</pre>

Creating an index:
<pre class="sh_javascript">
db.artists.ensureIndex({ "basename" : 1})
</pre>

### MongoDB Memory Usage
This [[Top]] report surprised me!

<pre>
top - 09:24:15 up 14 days, 18:53,  2 users,  load average: 0.20, 0.29, 0.63
Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie
Cpu(s): 11.5%us,  5.7%sy,  0.0%ni,  0.0%id, 82.8%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:   2025308k total,  1898188k used,   127120k free,        0k buffers
Swap:        0k total,        0k used,        0k free,        0k cached

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                    
11465 mongodb   20   0 2870m 1.2g 1.1g S    0 64.1   1:14.79 mongod                                                                                     
</pre>

The process was using 64.1% of the memory (in reserve)!

A restart changed that:
<pre>
top - 09:25:56 up 14 days, 18:54,  2 users,  load average: 0.58, 0.39, 0.63
Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie
Cpu(s):  0.0%us,  0.0%sy,  0.0%ni,  0.0%id,100.0%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:   2025308k total,   615448k used,  1409860k free,        0k buffers
Swap:        0k total,        0k used,        0k free,        0k cached

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                    
20128 mongodb   20   0 48904 3524 3128 S    0  0.2   0:00.02 mongod                                                                                     
</pre>

I also noted this in the logs:

<pre>** NOTE: when using MongoDB 32 bit, you are limited to about 2 gigabytes of data</pre>

That, plus the amount of memory which MongoDB can occasionally consume, led me to decide to move my mongodb setup to another machine.

### Migrating a MongoDB Server
I did a quick search on this topic, but didn't find much, so I decided to just use [[rsync]]. My data set was over 2GB so it took some time, but thankfully the two servers were on the same network.

I haven't noticed any problems so far, though just in case, I decided to run repairDatabase. Because the database I was repairing is quite large, it took awhile, but it finished! It rebuilt the index, too.

<pre class="sh_log">
Sat Mar 20 11:18:19 646050 objects cloned so far from collection mongo.database
Sat Mar 20 11:18:21 getmore ip.patents cid:8493698387547968366 ntoreturn:0 query: {}  bytes:1050955 nreturned:386 242ms
Sat Mar 20 11:18:22 done allocating datafile /var/lib/mongodb/tmp_repairDatabase_0/ip.6, size: 2047MB, took 108.21 secs
Sat Mar 20 11:18:24 getmore ip.patents cid:8493698387547968366 ntoreturn:0 query: {}  bytes:1052450 nreturned:392 334ms
Sat Mar 20 11:18:26 building new index on { mongo.db.documents : 1.0 } for mongo.database...
Sat Mar 20 11:18:26 Buildindex mongo.database idxNo:1 { _id: ObjId(4ba4d8d3762f8fb65bd7a47a), ns: "mongo.databases", key: { mongo.db.documents: 1.0 }, name: "mongo.db.documents_1" }
		154800/648172	23%
		576900/648172	89%
Sat Mar 20 11:18:55 	 external sort used : 0 files  in 28 secs
</pre>

### Malloc Failed
<pre>
Mongo::ConnectionFailure at ...
Operation failed with the following exception: connection closed

Sat Mar 20 10:06:33 connection accepted from 192.168.8.48:34476 #21
Sat Mar 20 10:06:33  dbexit: malloc fails
Sat Mar 20 10:06:33 	 shutdown: going to close listening sockets...
Sat Mar 20 10:06:33 going to close listening socket: 6
Sat Mar 20 10:06:33 going to close listening socket: 7
Sat Mar 20 10:06:33 	 shutdown: going to flush oplog...
Sat Mar 20 10:06:33 	 shutdown: going to close sockets...
Sat Mar 20 10:06:33 	 shutdown: waiting for fs preallocator...
Sat Mar 20 10:06:33 	 shutdown: closing all files...
Sat Mar 20 10:06:33      closeAllFiles() finished
Sat Mar 20 10:06:33 	 shutdown: removing fs lock...
Sat Mar 20 10:06:33  dbexit: really exiting now
ERROR: Client::~Client _context should be NULL
</pre>

### Installing MongoDB on [[Debian]]
Why does installing MongoDB on Squeeze try to remove sysvinit??

<pre>
The following packages were automatically installed and are no longer required:
  ttf-dejavu-extra libicu40 djvulibre-desktop libdirectfb-1.0-0 libfreetype6-dev ttf-dejavu libjpeg62-dev libkadm5srv5 libpng12-dev
Use 'apt-get autoremove' to remove them.
The following extra packages will be installed:
  dbus hunspell-en-us libasound2 libavahi-client3 libavahi-common-data libavahi-common3 libboost-filesystem1.40.0 libboost-program-options1.40.0 libboost-system1.40.0
  libboost-thread1.40.0 libcairo2 libcups2 libdbus-1-3 libdirectfb-1.2-0 libglib2.0-0 libgtk2.0-0 libhunspell-1.2-0 libidl0 libmozjs-dev libmozjs2d libnspr4-0d libnspr4-dev
  libnss3-1d libnss3-dev libpixman-1-0 libreadline6 libsqlite3-0 libsqlite3-dev libxcb-render-util0 shared-mime-info upstart xulrunner-1.9.1 xulrunner-dev
Suggested packages:
  dbus-x11 hunspell openoffice.org-hunspell openoffice.org-core libasound2-plugins cups-common librsvg2-common gvfs sqlite3-doc libdbus-glib-1-2 libgconf2-4 libgnome2-0
  libgnomevfs2-0 libgnomeui-0 libcanberra0
The following packages will be REMOVED:
  sysvinit
The following NEW packages will be installed:
  dbus hunspell-en-us libasound2 libavahi-client3 libavahi-common-data libavahi-common3 libboost-filesystem1.40.0 libboost-program-options1.40.0 libboost-system1.40.0
  libboost-thread1.40.0 libdbus-1-3 libdirectfb-1.2-0 libhunspell-1.2-0 libidl0 libmozjs-dev libmozjs2d libnspr4-0d libnspr4-dev libnss3-1d libnss3-dev libreadline6 mongodb
  shared-mime-info upstart xulrunner-1.9.1 xulrunner-dev
The following packages will be upgraded:
  libcairo2 libcups2 libglib2.0-0 libgtk2.0-0 libpixman-1-0 libsqlite3-0 libsqlite3-dev libxcb-render-util0
WARNING: The following essential packages will be removed.
This should NOT be done unless you know exactly what you are doing!
  sysvinit
8 upgraded, 26 newly installed, 1 to remove and 430 not upgraded.
Need to get 31.0MB/31.7MB of archives.
After this operation, 95.7MB of additional disk space will be used.
You are about to do something potentially harmful.
To continue type in the phrase 'Yes, do as I say!'
 ?] NO
Abort.
</pre>

More information on [[Installing MongoDB on Debian]].

