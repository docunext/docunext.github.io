Mysqltuner is a [[/perl]] script which examines a [[/MySQL]] server and reviews
its configuration, then makes recommendations for improving performance.

Here's and example report:

<pre><code>
-------- General Statistics --------------------------------------------------
[!!] There is a new version of MySQLTuner available
[OK] Currently running supported MySQL version 5.0.51a-24+lenny1-log
[OK] Operating on 32-bit architecture with less than 2GB RAM

-------- Storage Engine Statistics -------------------------------------------
[--] Status: +Archive -BDB -Federated +InnoDB -ISAM -NDBCluster

[--] Data in MyISAM tables: 268M (Tables: 662)
[--] Data in InnoDB tables: 40M (Tables: 357)
[--] Data in FEDERATED tables: 1M (Tables: 7)
[--] Data in MEMORY tables: 378K (Tables: 10)

-------- Performance Metrics -------------------------------------------------
[--] Up for: 25d 23h 25m 46s (2M q [1.190 qps], 7K conn, TX: 21M, RX: 685M)
[--] Reads / Writes: 0% / 100%
[--] Total buffers: 2.7M per thread and 52.0M global
[OK] Maximum possible memory usage: 327.0M (33% of installed RAM)
[OK] Slow queries: 0% (1/2M)
[OK] Highest usage of available connections: 9% (9/100)
[!!] Cannot calculate MyISAM index size - re-run script as root user
[OK] Query cache efficiency: 81.2%
[OK] Query cache prunes per day: 0
[OK] Sorts requiring temporary tables: 0%
[!!] Temporary tables created on disk: 48%
[OK] Thread cache hit rate: 91%
[!!] Table cache hit rate: 0%
[OK] Open file limit used: 4%
[OK] Table locks acquired immediately: 100%
[!!] InnoDB data size / buffer pool: 40.1M/16.0M

-------- Recommendations -----------------------------------------------------
General recommendations:
    Enable the slow query log to troubleshoot bad queries
    When making adjustments, make tmp_table_size/max_heap_table_size equal
    Reduce your SELECT DISTINCT queries without LIMIT clauses
    Increase table_cache gradually to avoid file descriptor limits
Variables to adjust:
    tmp_table_size (> 32M)
    max_heap_table_size (> 16M)
    table_cache (> 24)
    innodb_buffer_pool_size (>= 40M)
</code></pre>

A well tuned server:
<pre><code>
-------- General Statistics --------------------------------------------------
[!!] There is a new version of MySQLTuner available
[OK] Currently running supported MySQL version 5.0.51a-24+lenny1-log
[OK] Operating on 64-bit architecture

-------- Storage Engine Statistics -------------------------------------------
[--] Status: +Archive -BDB -Federated +InnoDB -ISAM -NDBCluster

[--] Data in MyISAM tables: 241M (Tables: 450)
[--] Data in InnoDB tables: 56M (Tables: 325)
[--] Data in FEDERATED tables: 427K (Tables: 6)
[--] Data in MEMORY tables: 14M (Tables: 10)

-------- Performance Metrics -------------------------------------------------
[--] Up for: 7d 22h 33m 2s (8M q [11.774 qps], 61K conn, TX: 5B, RX: 1B)
[--] Reads / Writes: 69% / 31%
[--] Total buffers: 32.4M per thread and 1.7G global
[OK] Maximum possible memory usage: 4.8G (61% of installed RAM)
[OK] Slow queries: 0% (47K/8M)
[OK] Highest usage of available connections: 49% (49/100)
[OK] Key buffer size / total MyISAM indexes: 64.0M/57.2M
[OK] Key buffer hit rate: 100.0%
[OK] Query cache efficiency: 88.9%
[OK] Query cache prunes per day: 0
[OK] Sorts requiring temporary tables: 0%
[OK] Temporary tables created on disk: 12%
[OK] Thread cache hit rate: 94%
[OK] Table cache hit rate: 97%
[OK] Open file limit used: 45%
[OK] Table locks acquired immediately: 99%
[OK] InnoDB data size / buffer pool: 56.6M/1.0G

-------- Recommendations -----------------------------------------------------
No additional performance recommendations are available.
</code></pre>

### My Experience with MySQLtuner
It definitely helped me because I had MySQL set to consumer more memory than my system had!

I just ran mysqltuner on my development machine and it replied with this recommendation:

    Reduce your SELECT DISTINCT queries without LIMIT clauses
